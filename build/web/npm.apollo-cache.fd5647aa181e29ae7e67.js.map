{"version":3,"sources":["webpack://pbm/./node_modules/apollo-cache/lib/bundle.esm.js"],"names":["queryFromPojo","obj","kind","definitions","operation","name","value","selectionSet","selectionSetFromObj","Array","isArray","selections","Object","keys","forEach","key","field","undefined","push","Cache","justTypenameQuery","variableDefinitions","directives","alias","arguments","ApolloCache","prototype","transformDocument","document","transformForLink","readQuery","options","optimistic","this","read","query","variables","readFragment","fragment","fragmentName","rootId","id","writeQuery","write","dataId","result","data","writeFragment","writeData","_a","typename","typenameResult","e","__typename","dataToWrite","assign","typeCondition"],"mappings":"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","file":"npm.apollo-cache.fd5647aa181e29ae7e67.js","sourcesContent":["import { getFragmentQueryDocument } from 'apollo-utilities';\n\nfunction queryFromPojo(obj) {\n    var op = {\n        kind: 'OperationDefinition',\n        operation: 'query',\n        name: {\n            kind: 'Name',\n            value: 'GeneratedClientQuery',\n        },\n        selectionSet: selectionSetFromObj(obj),\n    };\n    var out = {\n        kind: 'Document',\n        definitions: [op],\n    };\n    return out;\n}\nfunction fragmentFromPojo(obj, typename) {\n    var frag = {\n        kind: 'FragmentDefinition',\n        typeCondition: {\n            kind: 'NamedType',\n            name: {\n                kind: 'Name',\n                value: typename || '__FakeType',\n            },\n        },\n        name: {\n            kind: 'Name',\n            value: 'GeneratedClientQuery',\n        },\n        selectionSet: selectionSetFromObj(obj),\n    };\n    var out = {\n        kind: 'Document',\n        definitions: [frag],\n    };\n    return out;\n}\nfunction selectionSetFromObj(obj) {\n    if (typeof obj === 'number' ||\n        typeof obj === 'boolean' ||\n        typeof obj === 'string' ||\n        typeof obj === 'undefined' ||\n        obj === null) {\n        return null;\n    }\n    if (Array.isArray(obj)) {\n        return selectionSetFromObj(obj[0]);\n    }\n    var selections = [];\n    Object.keys(obj).forEach(function (key) {\n        var nestedSelSet = selectionSetFromObj(obj[key]);\n        var field = {\n            kind: 'Field',\n            name: {\n                kind: 'Name',\n                value: key,\n            },\n            selectionSet: nestedSelSet || undefined,\n        };\n        selections.push(field);\n    });\n    var selectionSet = {\n        kind: 'SelectionSet',\n        selections: selections,\n    };\n    return selectionSet;\n}\nvar justTypenameQuery = {\n    kind: 'Document',\n    definitions: [\n        {\n            kind: 'OperationDefinition',\n            operation: 'query',\n            name: null,\n            variableDefinitions: null,\n            directives: [],\n            selectionSet: {\n                kind: 'SelectionSet',\n                selections: [\n                    {\n                        kind: 'Field',\n                        alias: null,\n                        name: {\n                            kind: 'Name',\n                            value: '__typename',\n                        },\n                        arguments: [],\n                        directives: [],\n                        selectionSet: null,\n                    },\n                ],\n            },\n        },\n    ],\n};\n\nvar ApolloCache = (function () {\n    function ApolloCache() {\n    }\n    ApolloCache.prototype.transformDocument = function (document) {\n        return document;\n    };\n    ApolloCache.prototype.transformForLink = function (document) {\n        return document;\n    };\n    ApolloCache.prototype.readQuery = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.read({\n            query: options.query,\n            variables: options.variables,\n            optimistic: optimistic,\n        });\n    };\n    ApolloCache.prototype.readFragment = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.read({\n            query: getFragmentQueryDocument(options.fragment, options.fragmentName),\n            variables: options.variables,\n            rootId: options.id,\n            optimistic: optimistic,\n        });\n    };\n    ApolloCache.prototype.writeQuery = function (options) {\n        this.write({\n            dataId: 'ROOT_QUERY',\n            result: options.data,\n            query: options.query,\n            variables: options.variables,\n        });\n    };\n    ApolloCache.prototype.writeFragment = function (options) {\n        this.write({\n            dataId: options.id,\n            result: options.data,\n            variables: options.variables,\n            query: getFragmentQueryDocument(options.fragment, options.fragmentName),\n        });\n    };\n    ApolloCache.prototype.writeData = function (_a) {\n        var id = _a.id, data = _a.data;\n        if (typeof id !== 'undefined') {\n            var typenameResult = null;\n            try {\n                typenameResult = this.read({\n                    rootId: id,\n                    optimistic: false,\n                    query: justTypenameQuery,\n                });\n            }\n            catch (e) {\n            }\n            var __typename = (typenameResult && typenameResult.__typename) || '__ClientData';\n            var dataToWrite = Object.assign({ __typename: __typename }, data);\n            this.writeFragment({\n                id: id,\n                fragment: fragmentFromPojo(dataToWrite, __typename),\n                data: dataToWrite,\n            });\n        }\n        else {\n            this.writeQuery({ query: queryFromPojo(data), data: data });\n        }\n    };\n    return ApolloCache;\n}());\n\nvar Cache;\n(function (Cache) {\n})(Cache || (Cache = {}));\n\nexport { ApolloCache, Cache };\n//# sourceMappingURL=bundle.esm.js.map\n"],"sourceRoot":""}