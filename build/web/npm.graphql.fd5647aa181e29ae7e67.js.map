{"version":3,"sources":["webpack://pbm/./node_modules/graphql/error/GraphQLError.js","webpack://pbm/./node_modules/graphql/error/syntaxError.js","webpack://pbm/./node_modules/graphql/jsutils/defineInspect.js","webpack://pbm/./node_modules/graphql/jsutils/devAssert.js","webpack://pbm/./node_modules/graphql/jsutils/inspect.js","webpack://pbm/./node_modules/graphql/jsutils/invariant.js","webpack://pbm/./node_modules/graphql/jsutils/isObjectLike.js","webpack://pbm/./node_modules/graphql/jsutils/nodejsCustomInspectSymbol.js","webpack://pbm/./node_modules/graphql/language/ast.js","webpack://pbm/./node_modules/graphql/language/blockString.js","webpack://pbm/./node_modules/graphql/language/directiveLocation.js","webpack://pbm/./node_modules/graphql/language/kinds.js","webpack://pbm/./node_modules/graphql/language/lexer.js","webpack://pbm/./node_modules/graphql/language/location.js","webpack://pbm/./node_modules/graphql/language/parser.js","webpack://pbm/./node_modules/graphql/language/printLocation.js","webpack://pbm/./node_modules/graphql/language/printer.js","webpack://pbm/./node_modules/graphql/language/printer.mjs","webpack://pbm/./node_modules/graphql/language/blockString.mjs","webpack://pbm/./node_modules/graphql/language/source.js","webpack://pbm/./node_modules/graphql/language/tokenKind.js","webpack://pbm/./node_modules/graphql/language/visitor.js","webpack://pbm/./node_modules/graphql/jsutils/nodejsCustomInspectSymbol.mjs","webpack://pbm/./node_modules/graphql/jsutils/inspect.mjs","webpack://pbm/./node_modules/graphql/jsutils/defineInspect.mjs","webpack://pbm/./node_modules/graphql/jsutils/invariant.mjs","webpack://pbm/./node_modules/graphql/language/ast.mjs","webpack://pbm/./node_modules/graphql/language/visitor.mjs","webpack://pbm/./node_modules/graphql/polyfills/symbols.js"],"names":["Object","defineProperty","exports","value","printError","GraphQLError","obj","_isObjectLike","__esModule","default","_symbols","_location","_printLocation","_typeof","Symbol","iterator","constructor","prototype","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","_possibleConstructorReturn","self","call","_assertThisInitialized","ReferenceError","_wrapNativeSuper","Class","_cache","Map","undefined","fn","Function","toString","indexOf","TypeError","has","get","set","Wrapper","_construct","arguments","_getPrototypeOf","this","create","_setPrototypeOf","Parent","args","_isNativeReflectConstruct","Reflect","construct","a","push","apply","instance","bind","sham","Proxy","Date","e","o","p","setPrototypeOf","__proto__","getPrototypeOf","_Error","subClass","superClass","_inherits","Derived","hasNativeReflectConstruct","Constructor","protoProps","_super","result","Super","NewTarget","message","nodes","source","positions","path","originalError","extensions","_locations2","_source2","_positions2","_extensions2","_this","_classCallCheck","_nodes$0$loc","_nodes","Array","isArray","_source","loc","_locations","_positions","reduce","list","node","start","map","pos","getLocation","_extensions","originalExtensions","defineProperties","name","locations","stack","Error","captureStackTrace","SYMBOL_TO_STRING_TAG","error","output","_i2","_error$nodes2","printLocation","_i4","_error$locations2","location","printSourceLocation","syntaxError","position","description","_GraphQLError","concat","classObject","toJSON","_invariant","inspect","_nodejsCustomInspectSymbol","_interopRequireDefault","condition","Boolean","formatValue","seenValues","JSON","stringify","previouslySeenValues","customInspectFn","object","String","getCustomFn","customValue","array","len","Math","min","remaining","items","join","formatArray","keys","tag","replace","getObjectTag","formatObject","formatObjectValue","_default","for","isNode","maybeNode","kind","Token","Location","_defineInspect","startToken","endToken","end","line","column","prev","next","getBlockStringIndentation","lines","commonIndent","indent","leadingWhitespace","str","isBlank","dedentBlockStringValue","rawString","split","slice","shift","pop","printBlockString","indentation","preferMultipleLines","isSingleLine","hasLeadingSpace","hasTrailingQuote","hasTrailingSlash","printAsMultipleLines","DirectiveLocation","freeze","QUERY","MUTATION","SUBSCRIPTION","FIELD","FRAGMENT_DEFINITION","FRAGMENT_SPREAD","INLINE_FRAGMENT","VARIABLE_DEFINITION","SCHEMA","SCALAR","OBJECT","FIELD_DEFINITION","ARGUMENT_DEFINITION","INTERFACE","UNION","ENUM","ENUM_VALUE","INPUT_OBJECT","INPUT_FIELD_DEFINITION","Kind","NAME","DOCUMENT","OPERATION_DEFINITION","SELECTION_SET","ARGUMENT","VARIABLE","INT","FLOAT","STRING","BOOLEAN","NULL","LIST","OBJECT_FIELD","DIRECTIVE","NAMED_TYPE","LIST_TYPE","NON_NULL_TYPE","SCHEMA_DEFINITION","OPERATION_TYPE_DEFINITION","SCALAR_TYPE_DEFINITION","OBJECT_TYPE_DEFINITION","INPUT_VALUE_DEFINITION","INTERFACE_TYPE_DEFINITION","UNION_TYPE_DEFINITION","ENUM_TYPE_DEFINITION","ENUM_VALUE_DEFINITION","INPUT_OBJECT_TYPE_DEFINITION","DIRECTIVE_DEFINITION","SCHEMA_EXTENSION","SCALAR_TYPE_EXTENSION","OBJECT_TYPE_EXTENSION","INTERFACE_TYPE_EXTENSION","UNION_TYPE_EXTENSION","ENUM_TYPE_EXTENSION","INPUT_OBJECT_TYPE_EXTENSION","isPunctuatorTokenKind","_tokenKind","TokenKind","BANG","DOLLAR","AMP","PAREN_L","PAREN_R","SPREAD","COLON","EQUALS","AT","BRACKET_L","BRACKET_R","BRACE_L","PIPE","BRACE_R","Lexer","_syntaxError","_ast","_blockString","startOfFileToken","SOF","lastToken","token","lineStart","_proto","advance","lookahead","EOF","_token$next","readToken","COMMENT","printCharCode","code","isNaN","fromCharCode","toUpperCase","lexer","body","bodyLength","startPosition","charCodeAt","positionAfterWhitespace","col","readComment","readName","firstCode","isFloat","readDigits","isNameStart","readNumber","chunkStart","rawValue","BLOCK_STRING","readBlockString","b","c","d","charCode","char2hex","invalidSequence","readString","unexpectedCharacterMessage","match","lineRegexp","exec","index","parse","options","Parser","parseDocument","parseValue","parser","expectToken","parseValueLiteral","parseType","type","parseTypeReference","_inspect","_devAssert","_kinds","_directiveLocation","_lexer","sourceObj","Source","_options","parseName","definitions","many","parseDefinition","peek","parseOperationDefinition","parseFragmentDefinition","parseTypeSystemDefinition","parseTypeSystemExtension","peekDescription","unexpected","operation","variableDefinitions","directives","selectionSet","parseSelectionSet","parseOperationType","parseVariableDefinitions","parseDirectives","operationToken","optionalMany","parseVariableDefinition","variable","parseVariable","defaultValue","expectOptionalToken","selections","parseSelection","parseFragment","parseField","alias","nameOrAlias","parseArguments","isConst","item","parseConstArgument","parseArgument","hasTypeCondition","expectOptionalKeyword","parseFragmentName","typeCondition","parseNamedType","_this$_options","expectKeyword","experimentalFragmentVariables","parseList","parseObject","parseStringLiteral","block","values","any","_this2","fields","parseObjectField","parseDirective","keywordToken","parseSchemaDefinition","parseScalarTypeDefinition","parseObjectTypeDefinition","parseInterfaceTypeDefinition","parseUnionTypeDefinition","parseEnumTypeDefinition","parseInputObjectTypeDefinition","parseDirectiveDefinition","parseDescription","operationTypes","parseOperationTypeDefinition","interfaces","parseImplementsInterfaces","parseFieldsDefinition","types","_this$_options2","allowLegacySDLImplementsInterfaces","_this$_options3","allowLegacySDLEmptyFields","parseFieldDefinition","parseArgumentDefs","parseInputValueDef","parseUnionMemberTypes","parseEnumValuesDefinition","parseEnumValueDefinition","parseInputFieldsDefinition","parseSchemaExtension","parseScalarTypeExtension","parseObjectTypeExtension","parseInterfaceTypeExtension","parseUnionTypeExtension","parseEnumTypeExtension","parseInputObjectTypeExtension","repeatable","parseDirectiveLocations","parseDirectiveLocation","_this$_options4","noLocation","getTokenKindDesc","getTokenDesc","atToken","openKind","parseFn","closeKind","sourceLocation","firstLineColumnOffset","locationOffset","whitespace","lineIndex","lineOffset","lineNum","columnOffset","columnNum","locationStr","locationLine","subLineIndex","floor","subLineColumnNum","subLines","printPrefixedLines","subLine","existingLines","filter","_ref","padLen","max","_ref2","_ref3","prefix","ast","_visitor","visit","leave","printDocASTReducer","Name","Variable","Document","OperationDefinition","op","varDefs","wrap","VariableDefinition","SelectionSet","Field","Argument","_ref4","FragmentSpread","_ref5","InlineFragment","_ref6","FragmentDefinition","_ref7","IntValue","_ref8","FloatValue","_ref9","StringValue","_ref10","BooleanValue","_ref11","NullValue","EnumValue","_ref12","ListValue","_ref13","ObjectValue","_ref14","ObjectField","_ref15","Directive","_ref16","NamedType","_ref17","ListType","_ref18","NonNullType","_ref19","SchemaDefinition","addDescription","_ref20","OperationTypeDefinition","_ref21","ScalarTypeDefinition","_ref22","ObjectTypeDefinition","_ref23","FieldDefinition","_ref24","hasMultilineItems","InputValueDefinition","_ref25","InterfaceTypeDefinition","_ref26","UnionTypeDefinition","_ref27","EnumTypeDefinition","_ref28","EnumValueDefinition","_ref29","InputObjectTypeDefinition","_ref30","DirectiveDefinition","_ref31","SchemaExtension","_ref32","ScalarTypeExtension","_ref33","ObjectTypeExtension","_ref34","InterfaceTypeExtension","_ref35","UnionTypeExtension","_ref36","EnumTypeExtension","_ref37","InputObjectTypeExtension","_ref38","cb","maybeArray","_maybeArray$filter$jo","separator","x","maybeString","isMultiline","string","some","print","root","visitor","visitorKeys","QueryDocumentKeys","inArray","edits","parent","ancestors","newRoot","isLeaving","isEdited","clone","_Object$keys2","k","editOffset","ii","editKey","editValue","splice","_visitorKeys$node$kin","visitFn","getVisitFn","BREAK","visitInParallel","visitors","skipping","enter","kindVisitor","kindSpecificVisitor","specificVisitor","specificKindVisitor","defineInspect","invariant","SYMBOL_ASYNC_ITERATOR","SYMBOL_ITERATOR","asyncIterator","toStringTag"],"mappings":"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","file":"npm.graphql.fd5647aa181e29ae7e67.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.printError = printError;\nexports.GraphQLError = void 0;\n\nvar _isObjectLike = _interopRequireDefault(require(\"../jsutils/isObjectLike\"));\n\nvar _symbols = require(\"../polyfills/symbols\");\n\nvar _location = require(\"../language/location\");\n\nvar _printLocation = require(\"../language/printLocation\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\nvar GraphQLError = /*#__PURE__*/function (_Error) {\n  _inherits(GraphQLError, _Error);\n\n  var _super = _createSuper(GraphQLError);\n\n  /**\n   * A message describing the Error for debugging purposes.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   *\n   * Note: should be treated as readonly, despite invariant usage.\n   */\n\n  /**\n   * An array of { line, column } locations within the source GraphQL document\n   * which correspond to this error.\n   *\n   * Errors during validation often contain multiple locations, for example to\n   * point out two things with the same name. Errors during execution include a\n   * single location, the field which produced the error.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array describing the JSON-path into the execution response which\n   * corresponds to this error. Only included for errors during execution.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array of GraphQL AST Nodes corresponding to this error.\n   */\n\n  /**\n   * The source GraphQL document for the first location of this error.\n   *\n   * Note that if this Error represents more than one node, the source may not\n   * represent nodes after the first node.\n   */\n\n  /**\n   * An array of character offsets within the source GraphQL document\n   * which correspond to this error.\n   */\n\n  /**\n   * The original error thrown from a field resolver during execution.\n   */\n\n  /**\n   * Extension fields to add to the formatted error.\n   */\n  function GraphQLError(message, nodes, source, positions, path, originalError, extensions) {\n    var _locations2, _source2, _positions2, _extensions2;\n\n    var _this;\n\n    _classCallCheck(this, GraphQLError);\n\n    _this = _super.call(this, message); // Compute list of blame nodes.\n\n    var _nodes = Array.isArray(nodes) ? nodes.length !== 0 ? nodes : undefined : nodes ? [nodes] : undefined; // Compute locations in the source for the given nodes/positions.\n\n\n    var _source = source;\n\n    if (!_source && _nodes) {\n      var _nodes$0$loc;\n\n      _source = (_nodes$0$loc = _nodes[0].loc) === null || _nodes$0$loc === void 0 ? void 0 : _nodes$0$loc.source;\n    }\n\n    var _positions = positions;\n\n    if (!_positions && _nodes) {\n      _positions = _nodes.reduce(function (list, node) {\n        if (node.loc) {\n          list.push(node.loc.start);\n        }\n\n        return list;\n      }, []);\n    }\n\n    if (_positions && _positions.length === 0) {\n      _positions = undefined;\n    }\n\n    var _locations;\n\n    if (positions && source) {\n      _locations = positions.map(function (pos) {\n        return (0, _location.getLocation)(source, pos);\n      });\n    } else if (_nodes) {\n      _locations = _nodes.reduce(function (list, node) {\n        if (node.loc) {\n          list.push((0, _location.getLocation)(node.loc.source, node.loc.start));\n        }\n\n        return list;\n      }, []);\n    }\n\n    var _extensions = extensions;\n\n    if (_extensions == null && originalError != null) {\n      var originalExtensions = originalError.extensions;\n\n      if ((0, _isObjectLike.default)(originalExtensions)) {\n        _extensions = originalExtensions;\n      }\n    }\n\n    Object.defineProperties(_assertThisInitialized(_this), {\n      name: {\n        value: 'GraphQLError'\n      },\n      message: {\n        value: message,\n        // By being enumerable, JSON.stringify will include `message` in the\n        // resulting output. This ensures that the simplest possible GraphQL\n        // service adheres to the spec.\n        enumerable: true,\n        writable: true\n      },\n      locations: {\n        // Coercing falsy values to undefined ensures they will not be included\n        // in JSON.stringify() when not provided.\n        value: (_locations2 = _locations) !== null && _locations2 !== void 0 ? _locations2 : undefined,\n        // By being enumerable, JSON.stringify will include `locations` in the\n        // resulting output. This ensures that the simplest possible GraphQL\n        // service adheres to the spec.\n        enumerable: _locations != null\n      },\n      path: {\n        // Coercing falsy values to undefined ensures they will not be included\n        // in JSON.stringify() when not provided.\n        value: path !== null && path !== void 0 ? path : undefined,\n        // By being enumerable, JSON.stringify will include `path` in the\n        // resulting output. This ensures that the simplest possible GraphQL\n        // service adheres to the spec.\n        enumerable: path != null\n      },\n      nodes: {\n        value: _nodes !== null && _nodes !== void 0 ? _nodes : undefined\n      },\n      source: {\n        value: (_source2 = _source) !== null && _source2 !== void 0 ? _source2 : undefined\n      },\n      positions: {\n        value: (_positions2 = _positions) !== null && _positions2 !== void 0 ? _positions2 : undefined\n      },\n      originalError: {\n        value: originalError\n      },\n      extensions: {\n        // Coercing falsy values to undefined ensures they will not be included\n        // in JSON.stringify() when not provided.\n        value: (_extensions2 = _extensions) !== null && _extensions2 !== void 0 ? _extensions2 : undefined,\n        // By being enumerable, JSON.stringify will include `path` in the\n        // resulting output. This ensures that the simplest possible GraphQL\n        // service adheres to the spec.\n        enumerable: _extensions != null\n      }\n    }); // Include (non-enumerable) stack trace.\n\n    if (originalError === null || originalError === void 0 ? void 0 : originalError.stack) {\n      Object.defineProperty(_assertThisInitialized(_this), 'stack', {\n        value: originalError.stack,\n        writable: true,\n        configurable: true\n      });\n      return _possibleConstructorReturn(_this);\n    } // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(_assertThisInitialized(_this), GraphQLError);\n    } else {\n      Object.defineProperty(_assertThisInitialized(_this), 'stack', {\n        value: Error().stack,\n        writable: true,\n        configurable: true\n      });\n    }\n\n    return _this;\n  }\n\n  _createClass(GraphQLError, [{\n    key: \"toString\",\n    value: function toString() {\n      return printError(this);\n    } // FIXME: workaround to not break chai comparisons, should be remove in v16\n    // $FlowFixMe Flow doesn't support computed properties yet\n\n  }, {\n    key: _symbols.SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'Object';\n    }\n  }]);\n\n  return GraphQLError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n */\n\n\nexports.GraphQLError = GraphQLError;\n\nfunction printError(error) {\n  var output = error.message;\n\n  if (error.nodes) {\n    for (var _i2 = 0, _error$nodes2 = error.nodes; _i2 < _error$nodes2.length; _i2++) {\n      var node = _error$nodes2[_i2];\n\n      if (node.loc) {\n        output += '\\n\\n' + (0, _printLocation.printLocation)(node.loc);\n      }\n    }\n  } else if (error.source && error.locations) {\n    for (var _i4 = 0, _error$locations2 = error.locations; _i4 < _error$locations2.length; _i4++) {\n      var location = _error$locations2[_i4];\n      output += '\\n\\n' + (0, _printLocation.printSourceLocation)(error.source, location);\n    }\n  }\n\n  return output;\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.syntaxError = syntaxError;\n\nvar _GraphQLError = require(\"./GraphQLError\");\n\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\nfunction syntaxError(source, position, description) {\n  return new _GraphQLError.GraphQLError(\"Syntax Error: \".concat(description), undefined, source, [position]);\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = defineInspect;\n\nvar _invariant = _interopRequireDefault(require(\"./invariant\"));\n\nvar _nodejsCustomInspectSymbol = _interopRequireDefault(require(\"./nodejsCustomInspectSymbol\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The `defineInspect()` function defines `inspect()` prototype method as alias of `toJSON`\n */\nfunction defineInspect(classObject) {\n  var fn = classObject.prototype.toJSON;\n  typeof fn === 'function' || (0, _invariant.default)(0);\n  classObject.prototype.inspect = fn; // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\n  if (_nodejsCustomInspectSymbol.default) {\n    classObject.prototype[_nodejsCustomInspectSymbol.default] = fn;\n  }\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = devAssert;\n\nfunction devAssert(condition, message) {\n  var booleanCondition = Boolean(condition); // istanbul ignore else (See transformation done in './resources/inlineInvariant.js')\n\n  if (!booleanCondition) {\n    throw new Error(message);\n  }\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = inspect;\n\nvar _nodejsCustomInspectSymbol = _interopRequireDefault(require(\"./nodejsCustomInspectSymbol\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar MAX_ARRAY_LENGTH = 10;\nvar MAX_RECURSIVE_DEPTH = 2;\n/**\n * Used to print values in error messages.\n */\n\nfunction inspect(value) {\n  return formatValue(value, []);\n}\n\nfunction formatValue(value, seenValues) {\n  switch (_typeof(value)) {\n    case 'string':\n      return JSON.stringify(value);\n\n    case 'function':\n      return value.name ? \"[function \".concat(value.name, \"]\") : '[function]';\n\n    case 'object':\n      if (value === null) {\n        return 'null';\n      }\n\n      return formatObjectValue(value, seenValues);\n\n    default:\n      return String(value);\n  }\n}\n\nfunction formatObjectValue(value, previouslySeenValues) {\n  if (previouslySeenValues.indexOf(value) !== -1) {\n    return '[Circular]';\n  }\n\n  var seenValues = [].concat(previouslySeenValues, [value]);\n  var customInspectFn = getCustomFn(value);\n\n  if (customInspectFn !== undefined) {\n    // $FlowFixMe(>=0.90.0)\n    var customValue = customInspectFn.call(value); // check for infinite recursion\n\n    if (customValue !== value) {\n      return typeof customValue === 'string' ? customValue : formatValue(customValue, seenValues);\n    }\n  } else if (Array.isArray(value)) {\n    return formatArray(value, seenValues);\n  }\n\n  return formatObject(value, seenValues);\n}\n\nfunction formatObject(object, seenValues) {\n  var keys = Object.keys(object);\n\n  if (keys.length === 0) {\n    return '{}';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[' + getObjectTag(object) + ']';\n  }\n\n  var properties = keys.map(function (key) {\n    var value = formatValue(object[key], seenValues);\n    return key + ': ' + value;\n  });\n  return '{ ' + properties.join(', ') + ' }';\n}\n\nfunction formatArray(array, seenValues) {\n  if (array.length === 0) {\n    return '[]';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[Array]';\n  }\n\n  var len = Math.min(MAX_ARRAY_LENGTH, array.length);\n  var remaining = array.length - len;\n  var items = [];\n\n  for (var i = 0; i < len; ++i) {\n    items.push(formatValue(array[i], seenValues));\n  }\n\n  if (remaining === 1) {\n    items.push('... 1 more item');\n  } else if (remaining > 1) {\n    items.push(\"... \".concat(remaining, \" more items\"));\n  }\n\n  return '[' + items.join(', ') + ']';\n}\n\nfunction getCustomFn(object) {\n  var customInspectFn = object[String(_nodejsCustomInspectSymbol.default)];\n\n  if (typeof customInspectFn === 'function') {\n    return customInspectFn;\n  }\n\n  if (typeof object.inspect === 'function') {\n    return object.inspect;\n  }\n}\n\nfunction getObjectTag(object) {\n  var tag = Object.prototype.toString.call(object).replace(/^\\[object /, '').replace(/]$/, '');\n\n  if (tag === 'Object' && typeof object.constructor === 'function') {\n    var name = object.constructor.name;\n\n    if (typeof name === 'string' && name !== '') {\n      return name;\n    }\n  }\n\n  return tag;\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = invariant;\n\nfunction invariant(condition, message) {\n  var booleanCondition = Boolean(condition); // istanbul ignore else (See transformation done in './resources/inlineInvariant.js')\n\n  if (!booleanCondition) {\n    throw new Error(message != null ? message : 'Unexpected invariant triggered.');\n  }\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isObjectLike;\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Return true if `value` is object-like. A value is object-like if it's not\n * `null` and has a `typeof` result of \"object\".\n */\nfunction isObjectLike(value) {\n  return _typeof(value) == 'object' && value !== null;\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n// istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\nvar nodejsCustomInspectSymbol = typeof Symbol === 'function' && typeof Symbol.for === 'function' ? Symbol.for('nodejs.util.inspect.custom') : undefined;\nvar _default = nodejsCustomInspectSymbol;\nexports.default = _default;\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isNode = isNode;\nexports.Token = exports.Location = void 0;\n\nvar _defineInspect = _interopRequireDefault(require(\"../jsutils/defineInspect\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Contains a range of UTF-8 character offsets and token references that\n * identify the region of the source from which the AST derived.\n */\nvar Location = /*#__PURE__*/function () {\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The Token at which this Node begins.\n   */\n\n  /**\n   * The Token at which this Node ends.\n   */\n\n  /**\n   * The Source document the AST represents.\n   */\n  function Location(startToken, endToken, source) {\n    this.start = startToken.start;\n    this.end = endToken.end;\n    this.startToken = startToken;\n    this.endToken = endToken;\n    this.source = source;\n  }\n\n  var _proto = Location.prototype;\n\n  _proto.toJSON = function toJSON() {\n    return {\n      start: this.start,\n      end: this.end\n    };\n  };\n\n  return Location;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\n\nexports.Location = Location;\n(0, _defineInspect.default)(Location);\n/**\n * Represents a range of characters represented by a lexical token\n * within a Source.\n */\n\nvar Token = /*#__PURE__*/function () {\n  /**\n   * The kind of Token.\n   */\n\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The 1-indexed line number on which this Token appears.\n   */\n\n  /**\n   * The 1-indexed column number at which this Token begins.\n   */\n\n  /**\n   * For non-punctuation tokens, represents the interpreted value of the token.\n   */\n\n  /**\n   * Tokens exist as nodes in a double-linked-list amongst all tokens\n   * including ignored tokens. <SOF> is always the first node and <EOF>\n   * the last.\n   */\n  function Token(kind, start, end, line, column, prev, value) {\n    this.kind = kind;\n    this.start = start;\n    this.end = end;\n    this.line = line;\n    this.column = column;\n    this.value = value;\n    this.prev = prev;\n    this.next = null;\n  }\n\n  var _proto2 = Token.prototype;\n\n  _proto2.toJSON = function toJSON() {\n    return {\n      kind: this.kind,\n      value: this.value,\n      line: this.line,\n      column: this.column\n    };\n  };\n\n  return Token;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\n\nexports.Token = Token;\n(0, _defineInspect.default)(Token);\n/**\n * @internal\n */\n\nfunction isNode(maybeNode) {\n  return maybeNode != null && typeof maybeNode.kind === 'string';\n}\n/**\n * The list of all possible AST node types.\n */\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dedentBlockStringValue = dedentBlockStringValue;\nexports.getBlockStringIndentation = getBlockStringIndentation;\nexports.printBlockString = printBlockString;\n\n/**\n * Produces the value of a block string from its parsed raw value, similar to\n * CoffeeScript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n *\n * @internal\n */\nfunction dedentBlockStringValue(rawString) {\n  // Expand a block string's raw value into independent lines.\n  var lines = rawString.split(/\\r\\n|[\\n\\r]/g); // Remove common indentation from all lines but first.\n\n  var commonIndent = getBlockStringIndentation(lines);\n\n  if (commonIndent !== 0) {\n    for (var i = 1; i < lines.length; i++) {\n      lines[i] = lines[i].slice(commonIndent);\n    }\n  } // Remove leading and trailing blank lines.\n\n\n  while (lines.length > 0 && isBlank(lines[0])) {\n    lines.shift();\n  }\n\n  while (lines.length > 0 && isBlank(lines[lines.length - 1])) {\n    lines.pop();\n  } // Return a string of the lines joined with U+000A.\n\n\n  return lines.join('\\n');\n}\n/**\n * @internal\n */\n\n\nfunction getBlockStringIndentation(lines) {\n  var commonIndent = null;\n\n  for (var i = 1; i < lines.length; i++) {\n    var line = lines[i];\n    var indent = leadingWhitespace(line);\n\n    if (indent === line.length) {\n      continue; // skip empty lines\n    }\n\n    if (commonIndent === null || indent < commonIndent) {\n      commonIndent = indent;\n\n      if (commonIndent === 0) {\n        break;\n      }\n    }\n  }\n\n  return commonIndent === null ? 0 : commonIndent;\n}\n\nfunction leadingWhitespace(str) {\n  var i = 0;\n\n  while (i < str.length && (str[i] === ' ' || str[i] === '\\t')) {\n    i++;\n  }\n\n  return i;\n}\n\nfunction isBlank(str) {\n  return leadingWhitespace(str) === str.length;\n}\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n *\n * @internal\n */\n\n\nfunction printBlockString(value) {\n  var indentation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var preferMultipleLines = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var isSingleLine = value.indexOf('\\n') === -1;\n  var hasLeadingSpace = value[0] === ' ' || value[0] === '\\t';\n  var hasTrailingQuote = value[value.length - 1] === '\"';\n  var hasTrailingSlash = value[value.length - 1] === '\\\\';\n  var printAsMultipleLines = !isSingleLine || hasTrailingQuote || hasTrailingSlash || preferMultipleLines;\n  var result = ''; // Format a multi-line block quote to account for leading space.\n\n  if (printAsMultipleLines && !(isSingleLine && hasLeadingSpace)) {\n    result += '\\n' + indentation;\n  }\n\n  result += indentation ? value.replace(/\\n/g, '\\n' + indentation) : value;\n\n  if (printAsMultipleLines) {\n    result += '\\n';\n  }\n\n  return '\"\"\"' + result.replace(/\"\"\"/g, '\\\\\"\"\"') + '\"\"\"';\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DirectiveLocation = void 0;\n\n/**\n * The set of allowed directive location values.\n */\nvar DirectiveLocation = Object.freeze({\n  // Request Definitions\n  QUERY: 'QUERY',\n  MUTATION: 'MUTATION',\n  SUBSCRIPTION: 'SUBSCRIPTION',\n  FIELD: 'FIELD',\n  FRAGMENT_DEFINITION: 'FRAGMENT_DEFINITION',\n  FRAGMENT_SPREAD: 'FRAGMENT_SPREAD',\n  INLINE_FRAGMENT: 'INLINE_FRAGMENT',\n  VARIABLE_DEFINITION: 'VARIABLE_DEFINITION',\n  // Type System Definitions\n  SCHEMA: 'SCHEMA',\n  SCALAR: 'SCALAR',\n  OBJECT: 'OBJECT',\n  FIELD_DEFINITION: 'FIELD_DEFINITION',\n  ARGUMENT_DEFINITION: 'ARGUMENT_DEFINITION',\n  INTERFACE: 'INTERFACE',\n  UNION: 'UNION',\n  ENUM: 'ENUM',\n  ENUM_VALUE: 'ENUM_VALUE',\n  INPUT_OBJECT: 'INPUT_OBJECT',\n  INPUT_FIELD_DEFINITION: 'INPUT_FIELD_DEFINITION'\n});\n/**\n * The enum type representing the directive location values.\n */\n\nexports.DirectiveLocation = DirectiveLocation;\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Kind = void 0;\n\n/**\n * The set of allowed kind values for AST nodes.\n */\nvar Kind = Object.freeze({\n  // Name\n  NAME: 'Name',\n  // Document\n  DOCUMENT: 'Document',\n  OPERATION_DEFINITION: 'OperationDefinition',\n  VARIABLE_DEFINITION: 'VariableDefinition',\n  SELECTION_SET: 'SelectionSet',\n  FIELD: 'Field',\n  ARGUMENT: 'Argument',\n  // Fragments\n  FRAGMENT_SPREAD: 'FragmentSpread',\n  INLINE_FRAGMENT: 'InlineFragment',\n  FRAGMENT_DEFINITION: 'FragmentDefinition',\n  // Values\n  VARIABLE: 'Variable',\n  INT: 'IntValue',\n  FLOAT: 'FloatValue',\n  STRING: 'StringValue',\n  BOOLEAN: 'BooleanValue',\n  NULL: 'NullValue',\n  ENUM: 'EnumValue',\n  LIST: 'ListValue',\n  OBJECT: 'ObjectValue',\n  OBJECT_FIELD: 'ObjectField',\n  // Directives\n  DIRECTIVE: 'Directive',\n  // Types\n  NAMED_TYPE: 'NamedType',\n  LIST_TYPE: 'ListType',\n  NON_NULL_TYPE: 'NonNullType',\n  // Type System Definitions\n  SCHEMA_DEFINITION: 'SchemaDefinition',\n  OPERATION_TYPE_DEFINITION: 'OperationTypeDefinition',\n  // Type Definitions\n  SCALAR_TYPE_DEFINITION: 'ScalarTypeDefinition',\n  OBJECT_TYPE_DEFINITION: 'ObjectTypeDefinition',\n  FIELD_DEFINITION: 'FieldDefinition',\n  INPUT_VALUE_DEFINITION: 'InputValueDefinition',\n  INTERFACE_TYPE_DEFINITION: 'InterfaceTypeDefinition',\n  UNION_TYPE_DEFINITION: 'UnionTypeDefinition',\n  ENUM_TYPE_DEFINITION: 'EnumTypeDefinition',\n  ENUM_VALUE_DEFINITION: 'EnumValueDefinition',\n  INPUT_OBJECT_TYPE_DEFINITION: 'InputObjectTypeDefinition',\n  // Directive Definitions\n  DIRECTIVE_DEFINITION: 'DirectiveDefinition',\n  // Type System Extensions\n  SCHEMA_EXTENSION: 'SchemaExtension',\n  // Type Extensions\n  SCALAR_TYPE_EXTENSION: 'ScalarTypeExtension',\n  OBJECT_TYPE_EXTENSION: 'ObjectTypeExtension',\n  INTERFACE_TYPE_EXTENSION: 'InterfaceTypeExtension',\n  UNION_TYPE_EXTENSION: 'UnionTypeExtension',\n  ENUM_TYPE_EXTENSION: 'EnumTypeExtension',\n  INPUT_OBJECT_TYPE_EXTENSION: 'InputObjectTypeExtension'\n});\n/**\n * The enum type representing the possible kind values of AST nodes.\n */\n\nexports.Kind = Kind;\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isPunctuatorTokenKind = isPunctuatorTokenKind;\nexports.Lexer = void 0;\n\nvar _syntaxError = require(\"../error/syntaxError\");\n\nvar _ast = require(\"./ast\");\n\nvar _tokenKind = require(\"./tokenKind\");\n\nvar _blockString = require(\"./blockString\");\n\n/**\n * Given a Source object, creates a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\nvar Lexer = /*#__PURE__*/function () {\n  /**\n   * The previously focused non-ignored token.\n   */\n\n  /**\n   * The currently focused non-ignored token.\n   */\n\n  /**\n   * The (1-indexed) line containing the current token.\n   */\n\n  /**\n   * The character offset at which the current line begins.\n   */\n  function Lexer(source) {\n    var startOfFileToken = new _ast.Token(_tokenKind.TokenKind.SOF, 0, 0, 0, 0, null);\n    this.source = source;\n    this.lastToken = startOfFileToken;\n    this.token = startOfFileToken;\n    this.line = 1;\n    this.lineStart = 0;\n  }\n  /**\n   * Advances the token stream to the next non-ignored token.\n   */\n\n\n  var _proto = Lexer.prototype;\n\n  _proto.advance = function advance() {\n    this.lastToken = this.token;\n    var token = this.token = this.lookahead();\n    return token;\n  }\n  /**\n   * Looks ahead and returns the next non-ignored token, but does not change\n   * the state of Lexer.\n   */\n  ;\n\n  _proto.lookahead = function lookahead() {\n    var token = this.token;\n\n    if (token.kind !== _tokenKind.TokenKind.EOF) {\n      do {\n        var _token$next;\n\n        // Note: next is only mutable during parsing, so we cast to allow this.\n        token = (_token$next = token.next) !== null && _token$next !== void 0 ? _token$next : token.next = readToken(this, token);\n      } while (token.kind === _tokenKind.TokenKind.COMMENT);\n    }\n\n    return token;\n  };\n\n  return Lexer;\n}();\n/**\n * @internal\n */\n\n\nexports.Lexer = Lexer;\n\nfunction isPunctuatorTokenKind(kind) {\n  return kind === _tokenKind.TokenKind.BANG || kind === _tokenKind.TokenKind.DOLLAR || kind === _tokenKind.TokenKind.AMP || kind === _tokenKind.TokenKind.PAREN_L || kind === _tokenKind.TokenKind.PAREN_R || kind === _tokenKind.TokenKind.SPREAD || kind === _tokenKind.TokenKind.COLON || kind === _tokenKind.TokenKind.EQUALS || kind === _tokenKind.TokenKind.AT || kind === _tokenKind.TokenKind.BRACKET_L || kind === _tokenKind.TokenKind.BRACKET_R || kind === _tokenKind.TokenKind.BRACE_L || kind === _tokenKind.TokenKind.PIPE || kind === _tokenKind.TokenKind.BRACE_R;\n}\n\nfunction printCharCode(code) {\n  return (// NaN/undefined represents access beyond the end of the file.\n    isNaN(code) ? _tokenKind.TokenKind.EOF : // Trust JSON for ASCII.\n    code < 0x007f ? JSON.stringify(String.fromCharCode(code)) : // Otherwise print the escaped form.\n    \"\\\"\\\\u\".concat(('00' + code.toString(16).toUpperCase()).slice(-4), \"\\\"\")\n  );\n}\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace until it finds the next lexable token, then lexes\n * punctuators immediately or calls the appropriate helper function for more\n * complicated tokens.\n */\n\n\nfunction readToken(lexer, prev) {\n  var source = lexer.source;\n  var body = source.body;\n  var bodyLength = body.length;\n  var pos = positionAfterWhitespace(body, prev.end, lexer);\n  var line = lexer.line;\n  var col = 1 + pos - lexer.lineStart;\n\n  if (pos >= bodyLength) {\n    return new _ast.Token(_tokenKind.TokenKind.EOF, bodyLength, bodyLength, line, col, prev);\n  }\n\n  var code = body.charCodeAt(pos); // SourceCharacter\n\n  switch (code) {\n    // !\n    case 33:\n      return new _ast.Token(_tokenKind.TokenKind.BANG, pos, pos + 1, line, col, prev);\n    // #\n\n    case 35:\n      return readComment(source, pos, line, col, prev);\n    // $\n\n    case 36:\n      return new _ast.Token(_tokenKind.TokenKind.DOLLAR, pos, pos + 1, line, col, prev);\n    // &\n\n    case 38:\n      return new _ast.Token(_tokenKind.TokenKind.AMP, pos, pos + 1, line, col, prev);\n    // (\n\n    case 40:\n      return new _ast.Token(_tokenKind.TokenKind.PAREN_L, pos, pos + 1, line, col, prev);\n    // )\n\n    case 41:\n      return new _ast.Token(_tokenKind.TokenKind.PAREN_R, pos, pos + 1, line, col, prev);\n    // .\n\n    case 46:\n      if (body.charCodeAt(pos + 1) === 46 && body.charCodeAt(pos + 2) === 46) {\n        return new _ast.Token(_tokenKind.TokenKind.SPREAD, pos, pos + 3, line, col, prev);\n      }\n\n      break;\n    // :\n\n    case 58:\n      return new _ast.Token(_tokenKind.TokenKind.COLON, pos, pos + 1, line, col, prev);\n    // =\n\n    case 61:\n      return new _ast.Token(_tokenKind.TokenKind.EQUALS, pos, pos + 1, line, col, prev);\n    // @\n\n    case 64:\n      return new _ast.Token(_tokenKind.TokenKind.AT, pos, pos + 1, line, col, prev);\n    // [\n\n    case 91:\n      return new _ast.Token(_tokenKind.TokenKind.BRACKET_L, pos, pos + 1, line, col, prev);\n    // ]\n\n    case 93:\n      return new _ast.Token(_tokenKind.TokenKind.BRACKET_R, pos, pos + 1, line, col, prev);\n    // {\n\n    case 123:\n      return new _ast.Token(_tokenKind.TokenKind.BRACE_L, pos, pos + 1, line, col, prev);\n    // |\n\n    case 124:\n      return new _ast.Token(_tokenKind.TokenKind.PIPE, pos, pos + 1, line, col, prev);\n    // }\n\n    case 125:\n      return new _ast.Token(_tokenKind.TokenKind.BRACE_R, pos, pos + 1, line, col, prev);\n    // A-Z _ a-z\n\n    case 65:\n    case 66:\n    case 67:\n    case 68:\n    case 69:\n    case 70:\n    case 71:\n    case 72:\n    case 73:\n    case 74:\n    case 75:\n    case 76:\n    case 77:\n    case 78:\n    case 79:\n    case 80:\n    case 81:\n    case 82:\n    case 83:\n    case 84:\n    case 85:\n    case 86:\n    case 87:\n    case 88:\n    case 89:\n    case 90:\n    case 95:\n    case 97:\n    case 98:\n    case 99:\n    case 100:\n    case 101:\n    case 102:\n    case 103:\n    case 104:\n    case 105:\n    case 106:\n    case 107:\n    case 108:\n    case 109:\n    case 110:\n    case 111:\n    case 112:\n    case 113:\n    case 114:\n    case 115:\n    case 116:\n    case 117:\n    case 118:\n    case 119:\n    case 120:\n    case 121:\n    case 122:\n      return readName(source, pos, line, col, prev);\n    // - 0-9\n\n    case 45:\n    case 48:\n    case 49:\n    case 50:\n    case 51:\n    case 52:\n    case 53:\n    case 54:\n    case 55:\n    case 56:\n    case 57:\n      return readNumber(source, pos, code, line, col, prev);\n    // \"\n\n    case 34:\n      if (body.charCodeAt(pos + 1) === 34 && body.charCodeAt(pos + 2) === 34) {\n        return readBlockString(source, pos, line, col, prev, lexer);\n      }\n\n      return readString(source, pos, line, col, prev);\n  }\n\n  throw (0, _syntaxError.syntaxError)(source, pos, unexpectedCharacterMessage(code));\n}\n/**\n * Report a message that an unexpected character was encountered.\n */\n\n\nfunction unexpectedCharacterMessage(code) {\n  if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n    return \"Cannot contain the invalid character \".concat(printCharCode(code), \".\");\n  }\n\n  if (code === 39) {\n    // '\n    return 'Unexpected single quote character (\\'), did you mean to use a double quote (\")?';\n  }\n\n  return \"Cannot parse the unexpected character \".concat(printCharCode(code), \".\");\n}\n/**\n * Reads from body starting at startPosition until it finds a non-whitespace\n * character, then returns the position of that character for lexing.\n */\n\n\nfunction positionAfterWhitespace(body, startPosition, lexer) {\n  var bodyLength = body.length;\n  var position = startPosition;\n\n  while (position < bodyLength) {\n    var code = body.charCodeAt(position); // tab | space | comma | BOM\n\n    if (code === 9 || code === 32 || code === 44 || code === 0xfeff) {\n      ++position;\n    } else if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (body.charCodeAt(position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else {\n      break;\n    }\n  }\n\n  return position;\n}\n/**\n * Reads a comment token from the source file.\n *\n * #[\\u0009\\u0020-\\uFFFF]*\n */\n\n\nfunction readComment(source, start, line, col, prev) {\n  var body = source.body;\n  var code;\n  var position = start;\n\n  do {\n    code = body.charCodeAt(++position);\n  } while (!isNaN(code) && ( // SourceCharacter but not LineTerminator\n  code > 0x001f || code === 0x0009));\n\n  return new _ast.Token(_tokenKind.TokenKind.COMMENT, start, position, line, col, prev, body.slice(start + 1, position));\n}\n/**\n * Reads a number token from the source file, either a float\n * or an int depending on whether a decimal point appears.\n *\n * Int:   -?(0|[1-9][0-9]*)\n * Float: -?(0|[1-9][0-9]*)(\\.[0-9]+)?((E|e)(+|-)?[0-9]+)?\n */\n\n\nfunction readNumber(source, start, firstCode, line, col, prev) {\n  var body = source.body;\n  var code = firstCode;\n  var position = start;\n  var isFloat = false;\n\n  if (code === 45) {\n    // -\n    code = body.charCodeAt(++position);\n  }\n\n  if (code === 48) {\n    // 0\n    code = body.charCodeAt(++position);\n\n    if (code >= 48 && code <= 57) {\n      throw (0, _syntaxError.syntaxError)(source, position, \"Invalid number, unexpected digit after 0: \".concat(printCharCode(code), \".\"));\n    }\n  } else {\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 46) {\n    // .\n    isFloat = true;\n    code = body.charCodeAt(++position);\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 69 || code === 101) {\n    // E e\n    isFloat = true;\n    code = body.charCodeAt(++position);\n\n    if (code === 43 || code === 45) {\n      // + -\n      code = body.charCodeAt(++position);\n    }\n\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  } // Numbers cannot be followed by . or NameStart\n\n\n  if (code === 46 || isNameStart(code)) {\n    throw (0, _syntaxError.syntaxError)(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n  }\n\n  return new _ast.Token(isFloat ? _tokenKind.TokenKind.FLOAT : _tokenKind.TokenKind.INT, start, position, line, col, prev, body.slice(start, position));\n}\n/**\n * Returns the new position in the source after reading digits.\n */\n\n\nfunction readDigits(source, start, firstCode) {\n  var body = source.body;\n  var position = start;\n  var code = firstCode;\n\n  if (code >= 48 && code <= 57) {\n    // 0 - 9\n    do {\n      code = body.charCodeAt(++position);\n    } while (code >= 48 && code <= 57); // 0 - 9\n\n\n    return position;\n  }\n\n  throw (0, _syntaxError.syntaxError)(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n}\n/**\n * Reads a string token from the source file.\n *\n * \"([^\"\\\\\\u000A\\u000D]|(\\\\(u[0-9a-fA-F]{4}|[\"\\\\/bfnrt])))*\"\n */\n\n\nfunction readString(source, start, line, col, prev) {\n  var body = source.body;\n  var position = start + 1;\n  var chunkStart = position;\n  var code = 0;\n  var value = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position)) && // not LineTerminator\n  code !== 0x000a && code !== 0x000d) {\n    // Closing Quote (\")\n    if (code === 34) {\n      value += body.slice(chunkStart, position);\n      return new _ast.Token(_tokenKind.TokenKind.STRING, start, position + 1, line, col, prev, value);\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009) {\n      throw (0, _syntaxError.syntaxError)(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    ++position;\n\n    if (code === 92) {\n      // \\\n      value += body.slice(chunkStart, position - 1);\n      code = body.charCodeAt(position);\n\n      switch (code) {\n        case 34:\n          value += '\"';\n          break;\n\n        case 47:\n          value += '/';\n          break;\n\n        case 92:\n          value += '\\\\';\n          break;\n\n        case 98:\n          value += '\\b';\n          break;\n\n        case 102:\n          value += '\\f';\n          break;\n\n        case 110:\n          value += '\\n';\n          break;\n\n        case 114:\n          value += '\\r';\n          break;\n\n        case 116:\n          value += '\\t';\n          break;\n\n        case 117:\n          {\n            // uXXXX\n            var charCode = uniCharCode(body.charCodeAt(position + 1), body.charCodeAt(position + 2), body.charCodeAt(position + 3), body.charCodeAt(position + 4));\n\n            if (charCode < 0) {\n              var invalidSequence = body.slice(position + 1, position + 5);\n              throw (0, _syntaxError.syntaxError)(source, position, \"Invalid character escape sequence: \\\\u\".concat(invalidSequence, \".\"));\n            }\n\n            value += String.fromCharCode(charCode);\n            position += 4;\n            break;\n          }\n\n        default:\n          throw (0, _syntaxError.syntaxError)(source, position, \"Invalid character escape sequence: \\\\\".concat(String.fromCharCode(code), \".\"));\n      }\n\n      ++position;\n      chunkStart = position;\n    }\n  }\n\n  throw (0, _syntaxError.syntaxError)(source, position, 'Unterminated string.');\n}\n/**\n * Reads a block string token from the source file.\n *\n * \"\"\"(\"?\"?(\\\\\"\"\"|\\\\(?!=\"\"\")|[^\"\\\\]))*\"\"\"\n */\n\n\nfunction readBlockString(source, start, line, col, prev, lexer) {\n  var body = source.body;\n  var position = start + 3;\n  var chunkStart = position;\n  var code = 0;\n  var rawValue = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position))) {\n    // Closing Triple-Quote (\"\"\")\n    if (code === 34 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34) {\n      rawValue += body.slice(chunkStart, position);\n      return new _ast.Token(_tokenKind.TokenKind.BLOCK_STRING, start, position + 3, line, col, prev, (0, _blockString.dedentBlockStringValue)(rawValue));\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n      throw (0, _syntaxError.syntaxError)(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (body.charCodeAt(position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if ( // Escape Triple-Quote (\\\"\"\")\n    code === 92 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34 && body.charCodeAt(position + 3) === 34) {\n      rawValue += body.slice(chunkStart, position) + '\"\"\"';\n      position += 4;\n      chunkStart = position;\n    } else {\n      ++position;\n    }\n  }\n\n  throw (0, _syntaxError.syntaxError)(source, position, 'Unterminated string.');\n}\n/**\n * Converts four hexadecimal chars to the integer that the\n * string represents. For example, uniCharCode('0','0','0','f')\n * will return 15, and uniCharCode('0','0','f','f') returns 255.\n *\n * Returns a negative number on error, if a char was invalid.\n *\n * This is implemented by noting that char2hex() returns -1 on error,\n * which means the result of ORing the char2hex() will also be negative.\n */\n\n\nfunction uniCharCode(a, b, c, d) {\n  return char2hex(a) << 12 | char2hex(b) << 8 | char2hex(c) << 4 | char2hex(d);\n}\n/**\n * Converts a hex character to its integer value.\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 on error.\n */\n\n\nfunction char2hex(a) {\n  return a >= 48 && a <= 57 ? a - 48 // 0-9\n  : a >= 65 && a <= 70 ? a - 55 // A-F\n  : a >= 97 && a <= 102 ? a - 87 // a-f\n  : -1;\n}\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * [_A-Za-z][_0-9A-Za-z]*\n */\n\n\nfunction readName(source, start, line, col, prev) {\n  var body = source.body;\n  var bodyLength = body.length;\n  var position = start + 1;\n  var code = 0;\n\n  while (position !== bodyLength && !isNaN(code = body.charCodeAt(position)) && (code === 95 || // _\n  code >= 48 && code <= 57 || // 0-9\n  code >= 65 && code <= 90 || // A-Z\n  code >= 97 && code <= 122) // a-z\n  ) {\n    ++position;\n  }\n\n  return new _ast.Token(_tokenKind.TokenKind.NAME, start, position, line, col, prev, body.slice(start, position));\n} // _ A-Z a-z\n\n\nfunction isNameStart(code) {\n  return code === 95 || code >= 65 && code <= 90 || code >= 97 && code <= 122;\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getLocation = getLocation;\n\n/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nfunction getLocation(source, position) {\n  var lineRegexp = /\\r\\n|[\\n\\r]/g;\n  var line = 1;\n  var column = position + 1;\n  var match;\n\n  while ((match = lineRegexp.exec(source.body)) && match.index < position) {\n    line += 1;\n    column = position + 1 - (match.index + match[0].length);\n  }\n\n  return {\n    line: line,\n    column: column\n  };\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parse = parse;\nexports.parseValue = parseValue;\nexports.parseType = parseType;\n\nvar _inspect = _interopRequireDefault(require(\"../jsutils/inspect\"));\n\nvar _devAssert = _interopRequireDefault(require(\"../jsutils/devAssert\"));\n\nvar _syntaxError = require(\"../error/syntaxError\");\n\nvar _kinds = require(\"./kinds\");\n\nvar _ast = require(\"./ast\");\n\nvar _source = require(\"./source\");\n\nvar _tokenKind = require(\"./tokenKind\");\n\nvar _directiveLocation = require(\"./directiveLocation\");\n\nvar _lexer = require(\"./lexer\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\nfunction parse(source, options) {\n  var parser = new Parser(source, options);\n  return parser.parseDocument();\n}\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\n\n\nfunction parseValue(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(_tokenKind.TokenKind.SOF);\n  var value = parser.parseValueLiteral(false);\n  parser.expectToken(_tokenKind.TokenKind.EOF);\n  return value;\n}\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\n\n\nfunction parseType(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(_tokenKind.TokenKind.SOF);\n  var type = parser.parseTypeReference();\n  parser.expectToken(_tokenKind.TokenKind.EOF);\n  return type;\n}\n\nvar Parser = /*#__PURE__*/function () {\n  function Parser(source, options) {\n    var sourceObj = typeof source === 'string' ? new _source.Source(source) : source;\n    sourceObj instanceof _source.Source || (0, _devAssert.default)(0, \"Must provide Source. Received: \".concat((0, _inspect.default)(sourceObj), \".\"));\n    this._lexer = new _lexer.Lexer(sourceObj);\n    this._options = options;\n  }\n  /**\n   * Converts a name lex token into a name parse node.\n   */\n\n\n  var _proto = Parser.prototype;\n\n  _proto.parseName = function parseName() {\n    var token = this.expectToken(_tokenKind.TokenKind.NAME);\n    return {\n      kind: _kinds.Kind.NAME,\n      value: token.value,\n      loc: this.loc(token)\n    };\n  } // Implements the parsing rules in the Document section.\n\n  /**\n   * Document : Definition+\n   */\n  ;\n\n  _proto.parseDocument = function parseDocument() {\n    var start = this._lexer.token;\n    return {\n      kind: _kinds.Kind.DOCUMENT,\n      definitions: this.many(_tokenKind.TokenKind.SOF, this.parseDefinition, _tokenKind.TokenKind.EOF),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Definition :\n   *   - ExecutableDefinition\n   *   - TypeSystemDefinition\n   *   - TypeSystemExtension\n   *\n   * ExecutableDefinition :\n   *   - OperationDefinition\n   *   - FragmentDefinition\n   */\n  ;\n\n  _proto.parseDefinition = function parseDefinition() {\n    if (this.peek(_tokenKind.TokenKind.NAME)) {\n      switch (this._lexer.token.value) {\n        case 'query':\n        case 'mutation':\n        case 'subscription':\n          return this.parseOperationDefinition();\n\n        case 'fragment':\n          return this.parseFragmentDefinition();\n\n        case 'schema':\n        case 'scalar':\n        case 'type':\n        case 'interface':\n        case 'union':\n        case 'enum':\n        case 'input':\n        case 'directive':\n          return this.parseTypeSystemDefinition();\n\n        case 'extend':\n          return this.parseTypeSystemExtension();\n      }\n    } else if (this.peek(_tokenKind.TokenKind.BRACE_L)) {\n      return this.parseOperationDefinition();\n    } else if (this.peekDescription()) {\n      return this.parseTypeSystemDefinition();\n    }\n\n    throw this.unexpected();\n  } // Implements the parsing rules in the Operations section.\n\n  /**\n   * OperationDefinition :\n   *  - SelectionSet\n   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseOperationDefinition = function parseOperationDefinition() {\n    var start = this._lexer.token;\n\n    if (this.peek(_tokenKind.TokenKind.BRACE_L)) {\n      return {\n        kind: _kinds.Kind.OPERATION_DEFINITION,\n        operation: 'query',\n        name: undefined,\n        variableDefinitions: [],\n        directives: [],\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    var operation = this.parseOperationType();\n    var name;\n\n    if (this.peek(_tokenKind.TokenKind.NAME)) {\n      name = this.parseName();\n    }\n\n    return {\n      kind: _kinds.Kind.OPERATION_DEFINITION,\n      operation: operation,\n      name: name,\n      variableDefinitions: this.parseVariableDefinitions(),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationType : one of query mutation subscription\n   */\n  ;\n\n  _proto.parseOperationType = function parseOperationType() {\n    var operationToken = this.expectToken(_tokenKind.TokenKind.NAME);\n\n    switch (operationToken.value) {\n      case 'query':\n        return 'query';\n\n      case 'mutation':\n        return 'mutation';\n\n      case 'subscription':\n        return 'subscription';\n    }\n\n    throw this.unexpected(operationToken);\n  }\n  /**\n   * VariableDefinitions : ( VariableDefinition+ )\n   */\n  ;\n\n  _proto.parseVariableDefinitions = function parseVariableDefinitions() {\n    return this.optionalMany(_tokenKind.TokenKind.PAREN_L, this.parseVariableDefinition, _tokenKind.TokenKind.PAREN_R);\n  }\n  /**\n   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseVariableDefinition = function parseVariableDefinition() {\n    var start = this._lexer.token;\n    return {\n      kind: _kinds.Kind.VARIABLE_DEFINITION,\n      variable: this.parseVariable(),\n      type: (this.expectToken(_tokenKind.TokenKind.COLON), this.parseTypeReference()),\n      defaultValue: this.expectOptionalToken(_tokenKind.TokenKind.EQUALS) ? this.parseValueLiteral(true) : undefined,\n      directives: this.parseDirectives(true),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Variable : $ Name\n   */\n  ;\n\n  _proto.parseVariable = function parseVariable() {\n    var start = this._lexer.token;\n    this.expectToken(_tokenKind.TokenKind.DOLLAR);\n    return {\n      kind: _kinds.Kind.VARIABLE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * SelectionSet : { Selection+ }\n   */\n  ;\n\n  _proto.parseSelectionSet = function parseSelectionSet() {\n    var start = this._lexer.token;\n    return {\n      kind: _kinds.Kind.SELECTION_SET,\n      selections: this.many(_tokenKind.TokenKind.BRACE_L, this.parseSelection, _tokenKind.TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Selection :\n   *   - Field\n   *   - FragmentSpread\n   *   - InlineFragment\n   */\n  ;\n\n  _proto.parseSelection = function parseSelection() {\n    return this.peek(_tokenKind.TokenKind.SPREAD) ? this.parseFragment() : this.parseField();\n  }\n  /**\n   * Field : Alias? Name Arguments? Directives? SelectionSet?\n   *\n   * Alias : Name :\n   */\n  ;\n\n  _proto.parseField = function parseField() {\n    var start = this._lexer.token;\n    var nameOrAlias = this.parseName();\n    var alias;\n    var name;\n\n    if (this.expectOptionalToken(_tokenKind.TokenKind.COLON)) {\n      alias = nameOrAlias;\n      name = this.parseName();\n    } else {\n      name = nameOrAlias;\n    }\n\n    return {\n      kind: _kinds.Kind.FIELD,\n      alias: alias,\n      name: name,\n      arguments: this.parseArguments(false),\n      directives: this.parseDirectives(false),\n      selectionSet: this.peek(_tokenKind.TokenKind.BRACE_L) ? this.parseSelectionSet() : undefined,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Arguments[Const] : ( Argument[?Const]+ )\n   */\n  ;\n\n  _proto.parseArguments = function parseArguments(isConst) {\n    var item = isConst ? this.parseConstArgument : this.parseArgument;\n    return this.optionalMany(_tokenKind.TokenKind.PAREN_L, item, _tokenKind.TokenKind.PAREN_R);\n  }\n  /**\n   * Argument[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseArgument = function parseArgument() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(_tokenKind.TokenKind.COLON);\n    return {\n      kind: _kinds.Kind.ARGUMENT,\n      name: name,\n      value: this.parseValueLiteral(false),\n      loc: this.loc(start)\n    };\n  };\n\n  _proto.parseConstArgument = function parseConstArgument() {\n    var start = this._lexer.token;\n    return {\n      kind: _kinds.Kind.ARGUMENT,\n      name: this.parseName(),\n      value: (this.expectToken(_tokenKind.TokenKind.COLON), this.parseValueLiteral(true)),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Fragments section.\n\n  /**\n   * Corresponds to both FragmentSpread and InlineFragment in the spec.\n   *\n   * FragmentSpread : ... FragmentName Directives?\n   *\n   * InlineFragment : ... TypeCondition? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseFragment = function parseFragment() {\n    var start = this._lexer.token;\n    this.expectToken(_tokenKind.TokenKind.SPREAD);\n    var hasTypeCondition = this.expectOptionalKeyword('on');\n\n    if (!hasTypeCondition && this.peek(_tokenKind.TokenKind.NAME)) {\n      return {\n        kind: _kinds.Kind.FRAGMENT_SPREAD,\n        name: this.parseFragmentName(),\n        directives: this.parseDirectives(false),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: _kinds.Kind.INLINE_FRAGMENT,\n      typeCondition: hasTypeCondition ? this.parseNamedType() : undefined,\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentDefinition :\n   *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n   *\n   * TypeCondition : NamedType\n   */\n  ;\n\n  _proto.parseFragmentDefinition = function parseFragmentDefinition() {\n    var _this$_options;\n\n    var start = this._lexer.token;\n    this.expectKeyword('fragment'); // Experimental support for defining variables within fragments changes\n    // the grammar of FragmentDefinition:\n    //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n\n    if (((_this$_options = this._options) === null || _this$_options === void 0 ? void 0 : _this$_options.experimentalFragmentVariables) === true) {\n      return {\n        kind: _kinds.Kind.FRAGMENT_DEFINITION,\n        name: this.parseFragmentName(),\n        variableDefinitions: this.parseVariableDefinitions(),\n        typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n        directives: this.parseDirectives(false),\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: _kinds.Kind.FRAGMENT_DEFINITION,\n      name: this.parseFragmentName(),\n      typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentName : Name but not `on`\n   */\n  ;\n\n  _proto.parseFragmentName = function parseFragmentName() {\n    if (this._lexer.token.value === 'on') {\n      throw this.unexpected();\n    }\n\n    return this.parseName();\n  } // Implements the parsing rules in the Values section.\n\n  /**\n   * Value[Const] :\n   *   - [~Const] Variable\n   *   - IntValue\n   *   - FloatValue\n   *   - StringValue\n   *   - BooleanValue\n   *   - NullValue\n   *   - EnumValue\n   *   - ListValue[?Const]\n   *   - ObjectValue[?Const]\n   *\n   * BooleanValue : one of `true` `false`\n   *\n   * NullValue : `null`\n   *\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n  ;\n\n  _proto.parseValueLiteral = function parseValueLiteral(isConst) {\n    var token = this._lexer.token;\n\n    switch (token.kind) {\n      case _tokenKind.TokenKind.BRACKET_L:\n        return this.parseList(isConst);\n\n      case _tokenKind.TokenKind.BRACE_L:\n        return this.parseObject(isConst);\n\n      case _tokenKind.TokenKind.INT:\n        this._lexer.advance();\n\n        return {\n          kind: _kinds.Kind.INT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case _tokenKind.TokenKind.FLOAT:\n        this._lexer.advance();\n\n        return {\n          kind: _kinds.Kind.FLOAT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case _tokenKind.TokenKind.STRING:\n      case _tokenKind.TokenKind.BLOCK_STRING:\n        return this.parseStringLiteral();\n\n      case _tokenKind.TokenKind.NAME:\n        this._lexer.advance();\n\n        switch (token.value) {\n          case 'true':\n            return {\n              kind: _kinds.Kind.BOOLEAN,\n              value: true,\n              loc: this.loc(token)\n            };\n\n          case 'false':\n            return {\n              kind: _kinds.Kind.BOOLEAN,\n              value: false,\n              loc: this.loc(token)\n            };\n\n          case 'null':\n            return {\n              kind: _kinds.Kind.NULL,\n              loc: this.loc(token)\n            };\n\n          default:\n            return {\n              kind: _kinds.Kind.ENUM,\n              value: token.value,\n              loc: this.loc(token)\n            };\n        }\n\n      case _tokenKind.TokenKind.DOLLAR:\n        if (!isConst) {\n          return this.parseVariable();\n        }\n\n        break;\n    }\n\n    throw this.unexpected();\n  };\n\n  _proto.parseStringLiteral = function parseStringLiteral() {\n    var token = this._lexer.token;\n\n    this._lexer.advance();\n\n    return {\n      kind: _kinds.Kind.STRING,\n      value: token.value,\n      block: token.kind === _tokenKind.TokenKind.BLOCK_STRING,\n      loc: this.loc(token)\n    };\n  }\n  /**\n   * ListValue[Const] :\n   *   - [ ]\n   *   - [ Value[?Const]+ ]\n   */\n  ;\n\n  _proto.parseList = function parseList(isConst) {\n    var _this = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this.parseValueLiteral(isConst);\n    };\n\n    return {\n      kind: _kinds.Kind.LIST,\n      values: this.any(_tokenKind.TokenKind.BRACKET_L, item, _tokenKind.TokenKind.BRACKET_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectValue[Const] :\n   *   - { }\n   *   - { ObjectField[?Const]+ }\n   */\n  ;\n\n  _proto.parseObject = function parseObject(isConst) {\n    var _this2 = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this2.parseObjectField(isConst);\n    };\n\n    return {\n      kind: _kinds.Kind.OBJECT,\n      fields: this.any(_tokenKind.TokenKind.BRACE_L, item, _tokenKind.TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectField[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseObjectField = function parseObjectField(isConst) {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(_tokenKind.TokenKind.COLON);\n    return {\n      kind: _kinds.Kind.OBJECT_FIELD,\n      name: name,\n      value: this.parseValueLiteral(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Directives section.\n\n  /**\n   * Directives[Const] : Directive[?Const]+\n   */\n  ;\n\n  _proto.parseDirectives = function parseDirectives(isConst) {\n    var directives = [];\n\n    while (this.peek(_tokenKind.TokenKind.AT)) {\n      directives.push(this.parseDirective(isConst));\n    }\n\n    return directives;\n  }\n  /**\n   * Directive[Const] : @ Name Arguments[?Const]?\n   */\n  ;\n\n  _proto.parseDirective = function parseDirective(isConst) {\n    var start = this._lexer.token;\n    this.expectToken(_tokenKind.TokenKind.AT);\n    return {\n      kind: _kinds.Kind.DIRECTIVE,\n      name: this.parseName(),\n      arguments: this.parseArguments(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Types section.\n\n  /**\n   * Type :\n   *   - NamedType\n   *   - ListType\n   *   - NonNullType\n   */\n  ;\n\n  _proto.parseTypeReference = function parseTypeReference() {\n    var start = this._lexer.token;\n    var type;\n\n    if (this.expectOptionalToken(_tokenKind.TokenKind.BRACKET_L)) {\n      type = this.parseTypeReference();\n      this.expectToken(_tokenKind.TokenKind.BRACKET_R);\n      type = {\n        kind: _kinds.Kind.LIST_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    } else {\n      type = this.parseNamedType();\n    }\n\n    if (this.expectOptionalToken(_tokenKind.TokenKind.BANG)) {\n      return {\n        kind: _kinds.Kind.NON_NULL_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    }\n\n    return type;\n  }\n  /**\n   * NamedType : Name\n   */\n  ;\n\n  _proto.parseNamedType = function parseNamedType() {\n    var start = this._lexer.token;\n    return {\n      kind: _kinds.Kind.NAMED_TYPE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Type Definition section.\n\n  /**\n   * TypeSystemDefinition :\n   *   - SchemaDefinition\n   *   - TypeDefinition\n   *   - DirectiveDefinition\n   *\n   * TypeDefinition :\n   *   - ScalarTypeDefinition\n   *   - ObjectTypeDefinition\n   *   - InterfaceTypeDefinition\n   *   - UnionTypeDefinition\n   *   - EnumTypeDefinition\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemDefinition = function parseTypeSystemDefinition() {\n    // Many definitions begin with a description and require a lookahead.\n    var keywordToken = this.peekDescription() ? this._lexer.lookahead() : this._lexer.token;\n\n    if (keywordToken.kind === _tokenKind.TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaDefinition();\n\n        case 'scalar':\n          return this.parseScalarTypeDefinition();\n\n        case 'type':\n          return this.parseObjectTypeDefinition();\n\n        case 'interface':\n          return this.parseInterfaceTypeDefinition();\n\n        case 'union':\n          return this.parseUnionTypeDefinition();\n\n        case 'enum':\n          return this.parseEnumTypeDefinition();\n\n        case 'input':\n          return this.parseInputObjectTypeDefinition();\n\n        case 'directive':\n          return this.parseDirectiveDefinition();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  };\n\n  _proto.peekDescription = function peekDescription() {\n    return this.peek(_tokenKind.TokenKind.STRING) || this.peek(_tokenKind.TokenKind.BLOCK_STRING);\n  }\n  /**\n   * Description : StringValue\n   */\n  ;\n\n  _proto.parseDescription = function parseDescription() {\n    if (this.peekDescription()) {\n      return this.parseStringLiteral();\n    }\n  }\n  /**\n   * SchemaDefinition : Description? schema Directives[Const]? { OperationTypeDefinition+ }\n   */\n  ;\n\n  _proto.parseSchemaDefinition = function parseSchemaDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.many(_tokenKind.TokenKind.BRACE_L, this.parseOperationTypeDefinition, _tokenKind.TokenKind.BRACE_R);\n    return {\n      kind: _kinds.Kind.SCHEMA_DEFINITION,\n      description: description,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationTypeDefinition : OperationType : NamedType\n   */\n  ;\n\n  _proto.parseOperationTypeDefinition = function parseOperationTypeDefinition() {\n    var start = this._lexer.token;\n    var operation = this.parseOperationType();\n    this.expectToken(_tokenKind.TokenKind.COLON);\n    var type = this.parseNamedType();\n    return {\n      kind: _kinds.Kind.OPERATION_TYPE_DEFINITION,\n      operation: operation,\n      type: type,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n   */\n  ;\n\n  _proto.parseScalarTypeDefinition = function parseScalarTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: _kinds.Kind.SCALAR_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeDefinition :\n   *   Description?\n   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseObjectTypeDefinition = function parseObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: _kinds.Kind.OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ImplementsInterfaces :\n   *   - implements `&`? NamedType\n   *   - ImplementsInterfaces & NamedType\n   */\n  ;\n\n  _proto.parseImplementsInterfaces = function parseImplementsInterfaces() {\n    var types = [];\n\n    if (this.expectOptionalKeyword('implements')) {\n      // Optional leading ampersand\n      this.expectOptionalToken(_tokenKind.TokenKind.AMP);\n\n      do {\n        var _this$_options2;\n\n        types.push(this.parseNamedType());\n      } while (this.expectOptionalToken(_tokenKind.TokenKind.AMP) || // Legacy support for the SDL?\n      ((_this$_options2 = this._options) === null || _this$_options2 === void 0 ? void 0 : _this$_options2.allowLegacySDLImplementsInterfaces) === true && this.peek(_tokenKind.TokenKind.NAME));\n    }\n\n    return types;\n  }\n  /**\n   * FieldsDefinition : { FieldDefinition+ }\n   */\n  ;\n\n  _proto.parseFieldsDefinition = function parseFieldsDefinition() {\n    var _this$_options3;\n\n    // Legacy support for the SDL?\n    if (((_this$_options3 = this._options) === null || _this$_options3 === void 0 ? void 0 : _this$_options3.allowLegacySDLEmptyFields) === true && this.peek(_tokenKind.TokenKind.BRACE_L) && this._lexer.lookahead().kind === _tokenKind.TokenKind.BRACE_R) {\n      this._lexer.advance();\n\n      this._lexer.advance();\n\n      return [];\n    }\n\n    return this.optionalMany(_tokenKind.TokenKind.BRACE_L, this.parseFieldDefinition, _tokenKind.TokenKind.BRACE_R);\n  }\n  /**\n   * FieldDefinition :\n   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n   */\n  ;\n\n  _proto.parseFieldDefinition = function parseFieldDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    this.expectToken(_tokenKind.TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: _kinds.Kind.FIELD_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      type: type,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ArgumentsDefinition : ( InputValueDefinition+ )\n   */\n  ;\n\n  _proto.parseArgumentDefs = function parseArgumentDefs() {\n    return this.optionalMany(_tokenKind.TokenKind.PAREN_L, this.parseInputValueDef, _tokenKind.TokenKind.PAREN_R);\n  }\n  /**\n   * InputValueDefinition :\n   *   - Description? Name : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseInputValueDef = function parseInputValueDef() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    this.expectToken(_tokenKind.TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var defaultValue;\n\n    if (this.expectOptionalToken(_tokenKind.TokenKind.EQUALS)) {\n      defaultValue = this.parseValueLiteral(true);\n    }\n\n    var directives = this.parseDirectives(true);\n    return {\n      kind: _kinds.Kind.INPUT_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      type: type,\n      defaultValue: defaultValue,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeDefinition :\n   *   - Description? interface Name Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseInterfaceTypeDefinition = function parseInterfaceTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: _kinds.Kind.INTERFACE_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeDefinition :\n   *   - Description? union Name Directives[Const]? UnionMemberTypes?\n   */\n  ;\n\n  _proto.parseUnionTypeDefinition = function parseUnionTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n    return {\n      kind: _kinds.Kind.UNION_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionMemberTypes :\n   *   - = `|`? NamedType\n   *   - UnionMemberTypes | NamedType\n   */\n  ;\n\n  _proto.parseUnionMemberTypes = function parseUnionMemberTypes() {\n    var types = [];\n\n    if (this.expectOptionalToken(_tokenKind.TokenKind.EQUALS)) {\n      // Optional leading pipe\n      this.expectOptionalToken(_tokenKind.TokenKind.PIPE);\n\n      do {\n        types.push(this.parseNamedType());\n      } while (this.expectOptionalToken(_tokenKind.TokenKind.PIPE));\n    }\n\n    return types;\n  }\n  /**\n   * EnumTypeDefinition :\n   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n   */\n  ;\n\n  _proto.parseEnumTypeDefinition = function parseEnumTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n    return {\n      kind: _kinds.Kind.ENUM_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumValuesDefinition : { EnumValueDefinition+ }\n   */\n  ;\n\n  _proto.parseEnumValuesDefinition = function parseEnumValuesDefinition() {\n    return this.optionalMany(_tokenKind.TokenKind.BRACE_L, this.parseEnumValueDefinition, _tokenKind.TokenKind.BRACE_R);\n  }\n  /**\n   * EnumValueDefinition : Description? EnumValue Directives[Const]?\n   *\n   * EnumValue : Name\n   */\n  ;\n\n  _proto.parseEnumValueDefinition = function parseEnumValueDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: _kinds.Kind.ENUM_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeDefinition :\n   *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n   */\n  ;\n\n  _proto.parseInputObjectTypeDefinition = function parseInputObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n    return {\n      kind: _kinds.Kind.INPUT_OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputFieldsDefinition : { InputValueDefinition+ }\n   */\n  ;\n\n  _proto.parseInputFieldsDefinition = function parseInputFieldsDefinition() {\n    return this.optionalMany(_tokenKind.TokenKind.BRACE_L, this.parseInputValueDef, _tokenKind.TokenKind.BRACE_R);\n  }\n  /**\n   * TypeSystemExtension :\n   *   - SchemaExtension\n   *   - TypeExtension\n   *\n   * TypeExtension :\n   *   - ScalarTypeExtension\n   *   - ObjectTypeExtension\n   *   - InterfaceTypeExtension\n   *   - UnionTypeExtension\n   *   - EnumTypeExtension\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemExtension = function parseTypeSystemExtension() {\n    var keywordToken = this._lexer.lookahead();\n\n    if (keywordToken.kind === _tokenKind.TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaExtension();\n\n        case 'scalar':\n          return this.parseScalarTypeExtension();\n\n        case 'type':\n          return this.parseObjectTypeExtension();\n\n        case 'interface':\n          return this.parseInterfaceTypeExtension();\n\n        case 'union':\n          return this.parseUnionTypeExtension();\n\n        case 'enum':\n          return this.parseEnumTypeExtension();\n\n        case 'input':\n          return this.parseInputObjectTypeExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  }\n  /**\n   * SchemaExtension :\n   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }\n   *  - extend schema Directives[Const]\n   */\n  ;\n\n  _proto.parseSchemaExtension = function parseSchemaExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.optionalMany(_tokenKind.TokenKind.BRACE_L, this.parseOperationTypeDefinition, _tokenKind.TokenKind.BRACE_R);\n\n    if (directives.length === 0 && operationTypes.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: _kinds.Kind.SCHEMA_EXTENSION,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeExtension :\n   *   - extend scalar Name Directives[Const]\n   */\n  ;\n\n  _proto.parseScalarTypeExtension = function parseScalarTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n\n    if (directives.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: _kinds.Kind.SCALAR_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeExtension :\n   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend type Name ImplementsInterfaces? Directives[Const]\n   *  - extend type Name ImplementsInterfaces\n   */\n  ;\n\n  _proto.parseObjectTypeExtension = function parseObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: _kinds.Kind.OBJECT_TYPE_EXTENSION,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeExtension :\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]\n   *  - extend interface Name ImplementsInterfaces\n   */\n  ;\n\n  _proto.parseInterfaceTypeExtension = function parseInterfaceTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: _kinds.Kind.INTERFACE_TYPE_EXTENSION,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeExtension :\n   *   - extend union Name Directives[Const]? UnionMemberTypes\n   *   - extend union Name Directives[Const]\n   */\n  ;\n\n  _proto.parseUnionTypeExtension = function parseUnionTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n\n    if (directives.length === 0 && types.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: _kinds.Kind.UNION_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumTypeExtension :\n   *   - extend enum Name Directives[Const]? EnumValuesDefinition\n   *   - extend enum Name Directives[Const]\n   */\n  ;\n\n  _proto.parseEnumTypeExtension = function parseEnumTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n\n    if (directives.length === 0 && values.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: _kinds.Kind.ENUM_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeExtension :\n   *   - extend input Name Directives[Const]? InputFieldsDefinition\n   *   - extend input Name Directives[Const]\n   */\n  ;\n\n  _proto.parseInputObjectTypeExtension = function parseInputObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: _kinds.Kind.INPUT_OBJECT_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveDefinition :\n   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations\n   */\n  ;\n\n  _proto.parseDirectiveDefinition = function parseDirectiveDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('directive');\n    this.expectToken(_tokenKind.TokenKind.AT);\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    var repeatable = this.expectOptionalKeyword('repeatable');\n    this.expectKeyword('on');\n    var locations = this.parseDirectiveLocations();\n    return {\n      kind: _kinds.Kind.DIRECTIVE_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      repeatable: repeatable,\n      locations: locations,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveLocations :\n   *   - `|`? DirectiveLocation\n   *   - DirectiveLocations | DirectiveLocation\n   */\n  ;\n\n  _proto.parseDirectiveLocations = function parseDirectiveLocations() {\n    // Optional leading pipe\n    this.expectOptionalToken(_tokenKind.TokenKind.PIPE);\n    var locations = [];\n\n    do {\n      locations.push(this.parseDirectiveLocation());\n    } while (this.expectOptionalToken(_tokenKind.TokenKind.PIPE));\n\n    return locations;\n  }\n  /*\n   * DirectiveLocation :\n   *   - ExecutableDirectiveLocation\n   *   - TypeSystemDirectiveLocation\n   *\n   * ExecutableDirectiveLocation : one of\n   *   `QUERY`\n   *   `MUTATION`\n   *   `SUBSCRIPTION`\n   *   `FIELD`\n   *   `FRAGMENT_DEFINITION`\n   *   `FRAGMENT_SPREAD`\n   *   `INLINE_FRAGMENT`\n   *\n   * TypeSystemDirectiveLocation : one of\n   *   `SCHEMA`\n   *   `SCALAR`\n   *   `OBJECT`\n   *   `FIELD_DEFINITION`\n   *   `ARGUMENT_DEFINITION`\n   *   `INTERFACE`\n   *   `UNION`\n   *   `ENUM`\n   *   `ENUM_VALUE`\n   *   `INPUT_OBJECT`\n   *   `INPUT_FIELD_DEFINITION`\n   */\n  ;\n\n  _proto.parseDirectiveLocation = function parseDirectiveLocation() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n\n    if (_directiveLocation.DirectiveLocation[name.value] !== undefined) {\n      return name;\n    }\n\n    throw this.unexpected(start);\n  } // Core parsing utility functions\n\n  /**\n   * Returns a location object, used to identify the place in\n   * the source that created a given parsed object.\n   */\n  ;\n\n  _proto.loc = function loc(startToken) {\n    var _this$_options4;\n\n    if (((_this$_options4 = this._options) === null || _this$_options4 === void 0 ? void 0 : _this$_options4.noLocation) !== true) {\n      return new _ast.Location(startToken, this._lexer.lastToken, this._lexer.source);\n    }\n  }\n  /**\n   * Determines if the next token is of a given kind\n   */\n  ;\n\n  _proto.peek = function peek(kind) {\n    return this._lexer.token.kind === kind;\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing\n   * the lexer. Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectToken = function expectToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    throw (0, _syntaxError.syntaxError)(this._lexer.source, token.start, \"Expected \".concat(getTokenKindDesc(kind), \", found \").concat(getTokenDesc(token), \".\"));\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing\n   * the lexer. Otherwise, do not change the parser state and return undefined.\n   */\n  ;\n\n  _proto.expectOptionalToken = function expectOptionalToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    return undefined;\n  }\n  /**\n   * If the next token is a given keyword, advance the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectKeyword = function expectKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === _tokenKind.TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n    } else {\n      throw (0, _syntaxError.syntaxError)(this._lexer.source, token.start, \"Expected \\\"\".concat(value, \"\\\", found \").concat(getTokenDesc(token), \".\"));\n    }\n  }\n  /**\n   * If the next token is a given keyword, return \"true\" after advancing\n   * the lexer. Otherwise, do not change the parser state and return \"false\".\n   */\n  ;\n\n  _proto.expectOptionalKeyword = function expectOptionalKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === _tokenKind.TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Helper function for creating an error when an unexpected lexed token\n   * is encountered.\n   */\n  ;\n\n  _proto.unexpected = function unexpected(atToken) {\n    var token = atToken !== null && atToken !== void 0 ? atToken : this._lexer.token;\n    return (0, _syntaxError.syntaxError)(this._lexer.source, token.start, \"Unexpected \".concat(getTokenDesc(token), \".\"));\n  }\n  /**\n   * Returns a possibly empty list of parse nodes, determined by\n   * the parseFn. This list begins with a lex token of openKind\n   * and ends with a lex token of closeKind. Advances the parser\n   * to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.any = function any(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    while (!this.expectOptionalToken(closeKind)) {\n      nodes.push(parseFn.call(this));\n    }\n\n    return nodes;\n  }\n  /**\n   * Returns a list of parse nodes, determined by the parseFn.\n   * It can be empty only if open token is missing otherwise it will always\n   * return non-empty list that begins with a lex token of openKind and ends\n   * with a lex token of closeKind. Advances the parser to the next lex token\n   * after the closing token.\n   */\n  ;\n\n  _proto.optionalMany = function optionalMany(openKind, parseFn, closeKind) {\n    if (this.expectOptionalToken(openKind)) {\n      var nodes = [];\n\n      do {\n        nodes.push(parseFn.call(this));\n      } while (!this.expectOptionalToken(closeKind));\n\n      return nodes;\n    }\n\n    return [];\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by\n   * the parseFn. This list begins with a lex token of openKind\n   * and ends with a lex token of closeKind. Advances the parser\n   * to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.many = function many(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (!this.expectOptionalToken(closeKind));\n\n    return nodes;\n  };\n\n  return Parser;\n}();\n/**\n * A helper function to describe a token as a string for debugging\n */\n\n\nfunction getTokenDesc(token) {\n  var value = token.value;\n  return getTokenKindDesc(token.kind) + (value != null ? \" \\\"\".concat(value, \"\\\"\") : '');\n}\n/**\n * A helper function to describe a token kind as a string for debugging\n */\n\n\nfunction getTokenKindDesc(kind) {\n  return (0, _lexer.isPunctuatorTokenKind)(kind) ? \"\\\"\".concat(kind, \"\\\"\") : kind;\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.printLocation = printLocation;\nexports.printSourceLocation = printSourceLocation;\n\nvar _location = require(\"./location\");\n\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\nfunction printLocation(location) {\n  return printSourceLocation(location.source, (0, _location.getLocation)(location.source, location.start));\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\n\nfunction printSourceLocation(source, sourceLocation) {\n  var firstLineColumnOffset = source.locationOffset.column - 1;\n  var body = whitespace(firstLineColumnOffset) + source.body;\n  var lineIndex = sourceLocation.line - 1;\n  var lineOffset = source.locationOffset.line - 1;\n  var lineNum = sourceLocation.line + lineOffset;\n  var columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  var columnNum = sourceLocation.column + columnOffset;\n  var locationStr = \"\".concat(source.name, \":\").concat(lineNum, \":\").concat(columnNum, \"\\n\");\n  var lines = body.split(/\\r\\n|[\\n\\r]/g);\n  var locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    var subLineIndex = Math.floor(columnNum / 80);\n    var subLineColumnNum = columnNum % 80;\n    var subLines = [];\n\n    for (var i = 0; i < locationLine.length; i += 80) {\n      subLines.push(locationLine.slice(i, i + 80));\n    }\n\n    return locationStr + printPrefixedLines([[\"\".concat(lineNum), subLines[0]]].concat(subLines.slice(1, subLineIndex + 1).map(function (subLine) {\n      return ['', subLine];\n    }), [[' ', whitespace(subLineColumnNum - 1) + '^'], ['', subLines[subLineIndex + 1]]]));\n  }\n\n  return locationStr + printPrefixedLines([// Lines specified like this: [\"prefix\", \"string\"],\n  [\"\".concat(lineNum - 1), lines[lineIndex - 1]], [\"\".concat(lineNum), locationLine], ['', whitespace(columnNum - 1) + '^'], [\"\".concat(lineNum + 1), lines[lineIndex + 1]]]);\n}\n\nfunction printPrefixedLines(lines) {\n  var existingLines = lines.filter(function (_ref) {\n    var _ = _ref[0],\n        line = _ref[1];\n    return line !== undefined;\n  });\n  var padLen = Math.max.apply(Math, existingLines.map(function (_ref2) {\n    var prefix = _ref2[0];\n    return prefix.length;\n  }));\n  return existingLines.map(function (_ref3) {\n    var prefix = _ref3[0],\n        line = _ref3[1];\n    return leftPad(padLen, prefix) + (line ? ' | ' + line : ' |');\n  }).join('\\n');\n}\n\nfunction whitespace(len) {\n  return Array(len + 1).join(' ');\n}\n\nfunction leftPad(len, str) {\n  return whitespace(len - str.length) + str;\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.print = print;\n\nvar _visitor = require(\"./visitor\");\n\nvar _blockString = require(\"./blockString\");\n\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\nfunction print(ast) {\n  return (0, _visitor.visit)(ast, {\n    leave: printDocASTReducer\n  });\n} // TODO: provide better type coverage in future\n\n\nvar printDocASTReducer = {\n  Name: function Name(node) {\n    return node.value;\n  },\n  Variable: function Variable(node) {\n    return '$' + node.name;\n  },\n  // Document\n  Document: function Document(node) {\n    return join(node.definitions, '\\n\\n') + '\\n';\n  },\n  OperationDefinition: function OperationDefinition(node) {\n    var op = node.operation;\n    var name = node.name;\n    var varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n    var directives = join(node.directives, ' ');\n    var selectionSet = node.selectionSet; // Anonymous queries with no directives or variable definitions can use\n    // the query short form.\n\n    return !name && !directives && !varDefs && op === 'query' ? selectionSet : join([op, join([name, varDefs]), directives, selectionSet], ' ');\n  },\n  VariableDefinition: function VariableDefinition(_ref) {\n    var variable = _ref.variable,\n        type = _ref.type,\n        defaultValue = _ref.defaultValue,\n        directives = _ref.directives;\n    return variable + ': ' + type + wrap(' = ', defaultValue) + wrap(' ', join(directives, ' '));\n  },\n  SelectionSet: function SelectionSet(_ref2) {\n    var selections = _ref2.selections;\n    return block(selections);\n  },\n  Field: function Field(_ref3) {\n    var alias = _ref3.alias,\n        name = _ref3.name,\n        args = _ref3.arguments,\n        directives = _ref3.directives,\n        selectionSet = _ref3.selectionSet;\n    return join([wrap('', alias, ': ') + name + wrap('(', join(args, ', '), ')'), join(directives, ' '), selectionSet], ' ');\n  },\n  Argument: function Argument(_ref4) {\n    var name = _ref4.name,\n        value = _ref4.value;\n    return name + ': ' + value;\n  },\n  // Fragments\n  FragmentSpread: function FragmentSpread(_ref5) {\n    var name = _ref5.name,\n        directives = _ref5.directives;\n    return '...' + name + wrap(' ', join(directives, ' '));\n  },\n  InlineFragment: function InlineFragment(_ref6) {\n    var typeCondition = _ref6.typeCondition,\n        directives = _ref6.directives,\n        selectionSet = _ref6.selectionSet;\n    return join(['...', wrap('on ', typeCondition), join(directives, ' '), selectionSet], ' ');\n  },\n  FragmentDefinition: function FragmentDefinition(_ref7) {\n    var name = _ref7.name,\n        typeCondition = _ref7.typeCondition,\n        variableDefinitions = _ref7.variableDefinitions,\n        directives = _ref7.directives,\n        selectionSet = _ref7.selectionSet;\n    return (// Note: fragment variable definitions are experimental and may be changed\n      // or removed in the future.\n      \"fragment \".concat(name).concat(wrap('(', join(variableDefinitions, ', '), ')'), \" \") + \"on \".concat(typeCondition, \" \").concat(wrap('', join(directives, ' '), ' ')) + selectionSet\n    );\n  },\n  // Value\n  IntValue: function IntValue(_ref8) {\n    var value = _ref8.value;\n    return value;\n  },\n  FloatValue: function FloatValue(_ref9) {\n    var value = _ref9.value;\n    return value;\n  },\n  StringValue: function StringValue(_ref10, key) {\n    var value = _ref10.value,\n        isBlockString = _ref10.block;\n    return isBlockString ? (0, _blockString.printBlockString)(value, key === 'description' ? '' : '  ') : JSON.stringify(value);\n  },\n  BooleanValue: function BooleanValue(_ref11) {\n    var value = _ref11.value;\n    return value ? 'true' : 'false';\n  },\n  NullValue: function NullValue() {\n    return 'null';\n  },\n  EnumValue: function EnumValue(_ref12) {\n    var value = _ref12.value;\n    return value;\n  },\n  ListValue: function ListValue(_ref13) {\n    var values = _ref13.values;\n    return '[' + join(values, ', ') + ']';\n  },\n  ObjectValue: function ObjectValue(_ref14) {\n    var fields = _ref14.fields;\n    return '{' + join(fields, ', ') + '}';\n  },\n  ObjectField: function ObjectField(_ref15) {\n    var name = _ref15.name,\n        value = _ref15.value;\n    return name + ': ' + value;\n  },\n  // Directive\n  Directive: function Directive(_ref16) {\n    var name = _ref16.name,\n        args = _ref16.arguments;\n    return '@' + name + wrap('(', join(args, ', '), ')');\n  },\n  // Type\n  NamedType: function NamedType(_ref17) {\n    var name = _ref17.name;\n    return name;\n  },\n  ListType: function ListType(_ref18) {\n    var type = _ref18.type;\n    return '[' + type + ']';\n  },\n  NonNullType: function NonNullType(_ref19) {\n    var type = _ref19.type;\n    return type + '!';\n  },\n  // Type System Definitions\n  SchemaDefinition: addDescription(function (_ref20) {\n    var directives = _ref20.directives,\n        operationTypes = _ref20.operationTypes;\n    return join(['schema', join(directives, ' '), block(operationTypes)], ' ');\n  }),\n  OperationTypeDefinition: function OperationTypeDefinition(_ref21) {\n    var operation = _ref21.operation,\n        type = _ref21.type;\n    return operation + ': ' + type;\n  },\n  ScalarTypeDefinition: addDescription(function (_ref22) {\n    var name = _ref22.name,\n        directives = _ref22.directives;\n    return join(['scalar', name, join(directives, ' ')], ' ');\n  }),\n  ObjectTypeDefinition: addDescription(function (_ref23) {\n    var name = _ref23.name,\n        interfaces = _ref23.interfaces,\n        directives = _ref23.directives,\n        fields = _ref23.fields;\n    return join(['type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  }),\n  FieldDefinition: addDescription(function (_ref24) {\n    var name = _ref24.name,\n        args = _ref24.arguments,\n        type = _ref24.type,\n        directives = _ref24.directives;\n    return name + (hasMultilineItems(args) ? wrap('(\\n', indent(join(args, '\\n')), '\\n)') : wrap('(', join(args, ', '), ')')) + ': ' + type + wrap(' ', join(directives, ' '));\n  }),\n  InputValueDefinition: addDescription(function (_ref25) {\n    var name = _ref25.name,\n        type = _ref25.type,\n        defaultValue = _ref25.defaultValue,\n        directives = _ref25.directives;\n    return join([name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')], ' ');\n  }),\n  InterfaceTypeDefinition: addDescription(function (_ref26) {\n    var name = _ref26.name,\n        interfaces = _ref26.interfaces,\n        directives = _ref26.directives,\n        fields = _ref26.fields;\n    return join(['interface', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  }),\n  UnionTypeDefinition: addDescription(function (_ref27) {\n    var name = _ref27.name,\n        directives = _ref27.directives,\n        types = _ref27.types;\n    return join(['union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');\n  }),\n  EnumTypeDefinition: addDescription(function (_ref28) {\n    var name = _ref28.name,\n        directives = _ref28.directives,\n        values = _ref28.values;\n    return join(['enum', name, join(directives, ' '), block(values)], ' ');\n  }),\n  EnumValueDefinition: addDescription(function (_ref29) {\n    var name = _ref29.name,\n        directives = _ref29.directives;\n    return join([name, join(directives, ' ')], ' ');\n  }),\n  InputObjectTypeDefinition: addDescription(function (_ref30) {\n    var name = _ref30.name,\n        directives = _ref30.directives,\n        fields = _ref30.fields;\n    return join(['input', name, join(directives, ' '), block(fields)], ' ');\n  }),\n  DirectiveDefinition: addDescription(function (_ref31) {\n    var name = _ref31.name,\n        args = _ref31.arguments,\n        repeatable = _ref31.repeatable,\n        locations = _ref31.locations;\n    return 'directive @' + name + (hasMultilineItems(args) ? wrap('(\\n', indent(join(args, '\\n')), '\\n)') : wrap('(', join(args, ', '), ')')) + (repeatable ? ' repeatable' : '') + ' on ' + join(locations, ' | ');\n  }),\n  SchemaExtension: function SchemaExtension(_ref32) {\n    var directives = _ref32.directives,\n        operationTypes = _ref32.operationTypes;\n    return join(['extend schema', join(directives, ' '), block(operationTypes)], ' ');\n  },\n  ScalarTypeExtension: function ScalarTypeExtension(_ref33) {\n    var name = _ref33.name,\n        directives = _ref33.directives;\n    return join(['extend scalar', name, join(directives, ' ')], ' ');\n  },\n  ObjectTypeExtension: function ObjectTypeExtension(_ref34) {\n    var name = _ref34.name,\n        interfaces = _ref34.interfaces,\n        directives = _ref34.directives,\n        fields = _ref34.fields;\n    return join(['extend type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  },\n  InterfaceTypeExtension: function InterfaceTypeExtension(_ref35) {\n    var name = _ref35.name,\n        interfaces = _ref35.interfaces,\n        directives = _ref35.directives,\n        fields = _ref35.fields;\n    return join(['extend interface', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  },\n  UnionTypeExtension: function UnionTypeExtension(_ref36) {\n    var name = _ref36.name,\n        directives = _ref36.directives,\n        types = _ref36.types;\n    return join(['extend union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');\n  },\n  EnumTypeExtension: function EnumTypeExtension(_ref37) {\n    var name = _ref37.name,\n        directives = _ref37.directives,\n        values = _ref37.values;\n    return join(['extend enum', name, join(directives, ' '), block(values)], ' ');\n  },\n  InputObjectTypeExtension: function InputObjectTypeExtension(_ref38) {\n    var name = _ref38.name,\n        directives = _ref38.directives,\n        fields = _ref38.fields;\n    return join(['extend input', name, join(directives, ' '), block(fields)], ' ');\n  }\n};\n\nfunction addDescription(cb) {\n  return function (node) {\n    return join([node.description, cb(node)], '\\n');\n  };\n}\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\n\n\nfunction join(maybeArray) {\n  var _maybeArray$filter$jo;\n\n  var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  return (_maybeArray$filter$jo = maybeArray === null || maybeArray === void 0 ? void 0 : maybeArray.filter(function (x) {\n    return x;\n  }).join(separator)) !== null && _maybeArray$filter$jo !== void 0 ? _maybeArray$filter$jo : '';\n}\n/**\n * Given array, print each item on its own line, wrapped in an\n * indented \"{ }\" block.\n */\n\n\nfunction block(array) {\n  return array && array.length !== 0 ? '{\\n' + indent(join(array, '\\n')) + '\\n}' : '';\n}\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise\n * print an empty string.\n */\n\n\nfunction wrap(start, maybeString) {\n  var end = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  return maybeString ? start + maybeString + end : '';\n}\n\nfunction indent(maybeString) {\n  return maybeString && '  ' + maybeString.replace(/\\n/g, '\\n  ');\n}\n\nfunction isMultiline(string) {\n  return string.indexOf('\\n') !== -1;\n}\n\nfunction hasMultilineItems(maybeArray) {\n  return maybeArray && maybeArray.some(isMultiline);\n}\n","import { visit } from \"./visitor.mjs\";\nimport { printBlockString } from \"./blockString.mjs\";\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\n\nexport function print(ast) {\n  return visit(ast, {\n    leave: printDocASTReducer\n  });\n} // TODO: provide better type coverage in future\n\nvar printDocASTReducer = {\n  Name: function Name(node) {\n    return node.value;\n  },\n  Variable: function Variable(node) {\n    return '$' + node.name;\n  },\n  // Document\n  Document: function Document(node) {\n    return join(node.definitions, '\\n\\n') + '\\n';\n  },\n  OperationDefinition: function OperationDefinition(node) {\n    var op = node.operation;\n    var name = node.name;\n    var varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n    var directives = join(node.directives, ' ');\n    var selectionSet = node.selectionSet; // Anonymous queries with no directives or variable definitions can use\n    // the query short form.\n\n    return !name && !directives && !varDefs && op === 'query' ? selectionSet : join([op, join([name, varDefs]), directives, selectionSet], ' ');\n  },\n  VariableDefinition: function VariableDefinition(_ref) {\n    var variable = _ref.variable,\n        type = _ref.type,\n        defaultValue = _ref.defaultValue,\n        directives = _ref.directives;\n    return variable + ': ' + type + wrap(' = ', defaultValue) + wrap(' ', join(directives, ' '));\n  },\n  SelectionSet: function SelectionSet(_ref2) {\n    var selections = _ref2.selections;\n    return block(selections);\n  },\n  Field: function Field(_ref3) {\n    var alias = _ref3.alias,\n        name = _ref3.name,\n        args = _ref3.arguments,\n        directives = _ref3.directives,\n        selectionSet = _ref3.selectionSet;\n    return join([wrap('', alias, ': ') + name + wrap('(', join(args, ', '), ')'), join(directives, ' '), selectionSet], ' ');\n  },\n  Argument: function Argument(_ref4) {\n    var name = _ref4.name,\n        value = _ref4.value;\n    return name + ': ' + value;\n  },\n  // Fragments\n  FragmentSpread: function FragmentSpread(_ref5) {\n    var name = _ref5.name,\n        directives = _ref5.directives;\n    return '...' + name + wrap(' ', join(directives, ' '));\n  },\n  InlineFragment: function InlineFragment(_ref6) {\n    var typeCondition = _ref6.typeCondition,\n        directives = _ref6.directives,\n        selectionSet = _ref6.selectionSet;\n    return join(['...', wrap('on ', typeCondition), join(directives, ' '), selectionSet], ' ');\n  },\n  FragmentDefinition: function FragmentDefinition(_ref7) {\n    var name = _ref7.name,\n        typeCondition = _ref7.typeCondition,\n        variableDefinitions = _ref7.variableDefinitions,\n        directives = _ref7.directives,\n        selectionSet = _ref7.selectionSet;\n    return (// Note: fragment variable definitions are experimental and may be changed\n      // or removed in the future.\n      \"fragment \".concat(name).concat(wrap('(', join(variableDefinitions, ', '), ')'), \" \") + \"on \".concat(typeCondition, \" \").concat(wrap('', join(directives, ' '), ' ')) + selectionSet\n    );\n  },\n  // Value\n  IntValue: function IntValue(_ref8) {\n    var value = _ref8.value;\n    return value;\n  },\n  FloatValue: function FloatValue(_ref9) {\n    var value = _ref9.value;\n    return value;\n  },\n  StringValue: function StringValue(_ref10, key) {\n    var value = _ref10.value,\n        isBlockString = _ref10.block;\n    return isBlockString ? printBlockString(value, key === 'description' ? '' : '  ') : JSON.stringify(value);\n  },\n  BooleanValue: function BooleanValue(_ref11) {\n    var value = _ref11.value;\n    return value ? 'true' : 'false';\n  },\n  NullValue: function NullValue() {\n    return 'null';\n  },\n  EnumValue: function EnumValue(_ref12) {\n    var value = _ref12.value;\n    return value;\n  },\n  ListValue: function ListValue(_ref13) {\n    var values = _ref13.values;\n    return '[' + join(values, ', ') + ']';\n  },\n  ObjectValue: function ObjectValue(_ref14) {\n    var fields = _ref14.fields;\n    return '{' + join(fields, ', ') + '}';\n  },\n  ObjectField: function ObjectField(_ref15) {\n    var name = _ref15.name,\n        value = _ref15.value;\n    return name + ': ' + value;\n  },\n  // Directive\n  Directive: function Directive(_ref16) {\n    var name = _ref16.name,\n        args = _ref16.arguments;\n    return '@' + name + wrap('(', join(args, ', '), ')');\n  },\n  // Type\n  NamedType: function NamedType(_ref17) {\n    var name = _ref17.name;\n    return name;\n  },\n  ListType: function ListType(_ref18) {\n    var type = _ref18.type;\n    return '[' + type + ']';\n  },\n  NonNullType: function NonNullType(_ref19) {\n    var type = _ref19.type;\n    return type + '!';\n  },\n  // Type System Definitions\n  SchemaDefinition: addDescription(function (_ref20) {\n    var directives = _ref20.directives,\n        operationTypes = _ref20.operationTypes;\n    return join(['schema', join(directives, ' '), block(operationTypes)], ' ');\n  }),\n  OperationTypeDefinition: function OperationTypeDefinition(_ref21) {\n    var operation = _ref21.operation,\n        type = _ref21.type;\n    return operation + ': ' + type;\n  },\n  ScalarTypeDefinition: addDescription(function (_ref22) {\n    var name = _ref22.name,\n        directives = _ref22.directives;\n    return join(['scalar', name, join(directives, ' ')], ' ');\n  }),\n  ObjectTypeDefinition: addDescription(function (_ref23) {\n    var name = _ref23.name,\n        interfaces = _ref23.interfaces,\n        directives = _ref23.directives,\n        fields = _ref23.fields;\n    return join(['type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  }),\n  FieldDefinition: addDescription(function (_ref24) {\n    var name = _ref24.name,\n        args = _ref24.arguments,\n        type = _ref24.type,\n        directives = _ref24.directives;\n    return name + (hasMultilineItems(args) ? wrap('(\\n', indent(join(args, '\\n')), '\\n)') : wrap('(', join(args, ', '), ')')) + ': ' + type + wrap(' ', join(directives, ' '));\n  }),\n  InputValueDefinition: addDescription(function (_ref25) {\n    var name = _ref25.name,\n        type = _ref25.type,\n        defaultValue = _ref25.defaultValue,\n        directives = _ref25.directives;\n    return join([name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')], ' ');\n  }),\n  InterfaceTypeDefinition: addDescription(function (_ref26) {\n    var name = _ref26.name,\n        interfaces = _ref26.interfaces,\n        directives = _ref26.directives,\n        fields = _ref26.fields;\n    return join(['interface', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  }),\n  UnionTypeDefinition: addDescription(function (_ref27) {\n    var name = _ref27.name,\n        directives = _ref27.directives,\n        types = _ref27.types;\n    return join(['union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');\n  }),\n  EnumTypeDefinition: addDescription(function (_ref28) {\n    var name = _ref28.name,\n        directives = _ref28.directives,\n        values = _ref28.values;\n    return join(['enum', name, join(directives, ' '), block(values)], ' ');\n  }),\n  EnumValueDefinition: addDescription(function (_ref29) {\n    var name = _ref29.name,\n        directives = _ref29.directives;\n    return join([name, join(directives, ' ')], ' ');\n  }),\n  InputObjectTypeDefinition: addDescription(function (_ref30) {\n    var name = _ref30.name,\n        directives = _ref30.directives,\n        fields = _ref30.fields;\n    return join(['input', name, join(directives, ' '), block(fields)], ' ');\n  }),\n  DirectiveDefinition: addDescription(function (_ref31) {\n    var name = _ref31.name,\n        args = _ref31.arguments,\n        repeatable = _ref31.repeatable,\n        locations = _ref31.locations;\n    return 'directive @' + name + (hasMultilineItems(args) ? wrap('(\\n', indent(join(args, '\\n')), '\\n)') : wrap('(', join(args, ', '), ')')) + (repeatable ? ' repeatable' : '') + ' on ' + join(locations, ' | ');\n  }),\n  SchemaExtension: function SchemaExtension(_ref32) {\n    var directives = _ref32.directives,\n        operationTypes = _ref32.operationTypes;\n    return join(['extend schema', join(directives, ' '), block(operationTypes)], ' ');\n  },\n  ScalarTypeExtension: function ScalarTypeExtension(_ref33) {\n    var name = _ref33.name,\n        directives = _ref33.directives;\n    return join(['extend scalar', name, join(directives, ' ')], ' ');\n  },\n  ObjectTypeExtension: function ObjectTypeExtension(_ref34) {\n    var name = _ref34.name,\n        interfaces = _ref34.interfaces,\n        directives = _ref34.directives,\n        fields = _ref34.fields;\n    return join(['extend type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  },\n  InterfaceTypeExtension: function InterfaceTypeExtension(_ref35) {\n    var name = _ref35.name,\n        interfaces = _ref35.interfaces,\n        directives = _ref35.directives,\n        fields = _ref35.fields;\n    return join(['extend interface', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  },\n  UnionTypeExtension: function UnionTypeExtension(_ref36) {\n    var name = _ref36.name,\n        directives = _ref36.directives,\n        types = _ref36.types;\n    return join(['extend union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');\n  },\n  EnumTypeExtension: function EnumTypeExtension(_ref37) {\n    var name = _ref37.name,\n        directives = _ref37.directives,\n        values = _ref37.values;\n    return join(['extend enum', name, join(directives, ' '), block(values)], ' ');\n  },\n  InputObjectTypeExtension: function InputObjectTypeExtension(_ref38) {\n    var name = _ref38.name,\n        directives = _ref38.directives,\n        fields = _ref38.fields;\n    return join(['extend input', name, join(directives, ' '), block(fields)], ' ');\n  }\n};\n\nfunction addDescription(cb) {\n  return function (node) {\n    return join([node.description, cb(node)], '\\n');\n  };\n}\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\n\n\nfunction join(maybeArray) {\n  var _maybeArray$filter$jo;\n\n  var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  return (_maybeArray$filter$jo = maybeArray === null || maybeArray === void 0 ? void 0 : maybeArray.filter(function (x) {\n    return x;\n  }).join(separator)) !== null && _maybeArray$filter$jo !== void 0 ? _maybeArray$filter$jo : '';\n}\n/**\n * Given array, print each item on its own line, wrapped in an\n * indented \"{ }\" block.\n */\n\n\nfunction block(array) {\n  return array && array.length !== 0 ? '{\\n' + indent(join(array, '\\n')) + '\\n}' : '';\n}\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise\n * print an empty string.\n */\n\n\nfunction wrap(start, maybeString) {\n  var end = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  return maybeString ? start + maybeString + end : '';\n}\n\nfunction indent(maybeString) {\n  return maybeString && '  ' + maybeString.replace(/\\n/g, '\\n  ');\n}\n\nfunction isMultiline(string) {\n  return string.indexOf('\\n') !== -1;\n}\n\nfunction hasMultilineItems(maybeArray) {\n  return maybeArray && maybeArray.some(isMultiline);\n}\n","/**\n * Produces the value of a block string from its parsed raw value, similar to\n * CoffeeScript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n *\n * @internal\n */\nexport function dedentBlockStringValue(rawString) {\n  // Expand a block string's raw value into independent lines.\n  var lines = rawString.split(/\\r\\n|[\\n\\r]/g); // Remove common indentation from all lines but first.\n\n  var commonIndent = getBlockStringIndentation(lines);\n\n  if (commonIndent !== 0) {\n    for (var i = 1; i < lines.length; i++) {\n      lines[i] = lines[i].slice(commonIndent);\n    }\n  } // Remove leading and trailing blank lines.\n\n\n  while (lines.length > 0 && isBlank(lines[0])) {\n    lines.shift();\n  }\n\n  while (lines.length > 0 && isBlank(lines[lines.length - 1])) {\n    lines.pop();\n  } // Return a string of the lines joined with U+000A.\n\n\n  return lines.join('\\n');\n}\n/**\n * @internal\n */\n\nexport function getBlockStringIndentation(lines) {\n  var commonIndent = null;\n\n  for (var i = 1; i < lines.length; i++) {\n    var line = lines[i];\n    var indent = leadingWhitespace(line);\n\n    if (indent === line.length) {\n      continue; // skip empty lines\n    }\n\n    if (commonIndent === null || indent < commonIndent) {\n      commonIndent = indent;\n\n      if (commonIndent === 0) {\n        break;\n      }\n    }\n  }\n\n  return commonIndent === null ? 0 : commonIndent;\n}\n\nfunction leadingWhitespace(str) {\n  var i = 0;\n\n  while (i < str.length && (str[i] === ' ' || str[i] === '\\t')) {\n    i++;\n  }\n\n  return i;\n}\n\nfunction isBlank(str) {\n  return leadingWhitespace(str) === str.length;\n}\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n *\n * @internal\n */\n\n\nexport function printBlockString(value) {\n  var indentation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var preferMultipleLines = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var isSingleLine = value.indexOf('\\n') === -1;\n  var hasLeadingSpace = value[0] === ' ' || value[0] === '\\t';\n  var hasTrailingQuote = value[value.length - 1] === '\"';\n  var hasTrailingSlash = value[value.length - 1] === '\\\\';\n  var printAsMultipleLines = !isSingleLine || hasTrailingQuote || hasTrailingSlash || preferMultipleLines;\n  var result = ''; // Format a multi-line block quote to account for leading space.\n\n  if (printAsMultipleLines && !(isSingleLine && hasLeadingSpace)) {\n    result += '\\n' + indentation;\n  }\n\n  result += indentation ? value.replace(/\\n/g, '\\n' + indentation) : value;\n\n  if (printAsMultipleLines) {\n    result += '\\n';\n  }\n\n  return '\"\"\"' + result.replace(/\"\"\"/g, '\\\\\"\"\"') + '\"\"\"';\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Source = void 0;\n\nvar _symbols = require(\"../polyfills/symbols\");\n\nvar _devAssert = _interopRequireDefault(require(\"../jsutils/devAssert\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * A representation of source input to GraphQL. The `name` and `locationOffset` parameters are\n * optional, but they are useful for clients who store GraphQL documents in source files.\n * For example, if the GraphQL input starts at line 40 in a file named `Foo.graphql`, it might\n * be useful for `name` to be `\"Foo.graphql\"` and location to be `{ line: 40, column: 1 }`.\n * The `line` and `column` properties in `locationOffset` are 1-indexed.\n */\nvar Source = /*#__PURE__*/function () {\n  function Source(body) {\n    var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'GraphQL request';\n    var locationOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n      line: 1,\n      column: 1\n    };\n    this.body = body;\n    this.name = name;\n    this.locationOffset = locationOffset;\n    this.locationOffset.line > 0 || (0, _devAssert.default)(0, 'line in locationOffset is 1-indexed and must be positive.');\n    this.locationOffset.column > 0 || (0, _devAssert.default)(0, 'column in locationOffset is 1-indexed and must be positive.');\n  } // $FlowFixMe Flow doesn't support computed properties yet\n\n\n  _createClass(Source, [{\n    key: _symbols.SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'Source';\n    }\n  }]);\n\n  return Source;\n}();\n\nexports.Source = Source;\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TokenKind = void 0;\n\n/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nvar TokenKind = Object.freeze({\n  SOF: '<SOF>',\n  EOF: '<EOF>',\n  BANG: '!',\n  DOLLAR: '$',\n  AMP: '&',\n  PAREN_L: '(',\n  PAREN_R: ')',\n  SPREAD: '...',\n  COLON: ':',\n  EQUALS: '=',\n  AT: '@',\n  BRACKET_L: '[',\n  BRACKET_R: ']',\n  BRACE_L: '{',\n  PIPE: '|',\n  BRACE_R: '}',\n  NAME: 'Name',\n  INT: 'Int',\n  FLOAT: 'Float',\n  STRING: 'String',\n  BLOCK_STRING: 'BlockString',\n  COMMENT: 'Comment'\n});\n/**\n * The enum type representing the token kinds values.\n */\n\nexports.TokenKind = TokenKind;\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.visit = visit;\nexports.visitInParallel = visitInParallel;\nexports.getVisitFn = getVisitFn;\nexports.BREAK = exports.QueryDocumentKeys = void 0;\n\nvar _inspect = _interopRequireDefault(require(\"../jsutils/inspect\"));\n\nvar _ast = require(\"./ast\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar QueryDocumentKeys = {\n  Name: [],\n  Document: ['definitions'],\n  OperationDefinition: ['name', 'variableDefinitions', 'directives', 'selectionSet'],\n  VariableDefinition: ['variable', 'type', 'defaultValue', 'directives'],\n  Variable: ['name'],\n  SelectionSet: ['selections'],\n  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],\n  Argument: ['name', 'value'],\n  FragmentSpread: ['name', 'directives'],\n  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],\n  FragmentDefinition: ['name', // Note: fragment variable definitions are experimental and may be changed\n  // or removed in the future.\n  'variableDefinitions', 'typeCondition', 'directives', 'selectionSet'],\n  IntValue: [],\n  FloatValue: [],\n  StringValue: [],\n  BooleanValue: [],\n  NullValue: [],\n  EnumValue: [],\n  ListValue: ['values'],\n  ObjectValue: ['fields'],\n  ObjectField: ['name', 'value'],\n  Directive: ['name', 'arguments'],\n  NamedType: ['name'],\n  ListType: ['type'],\n  NonNullType: ['type'],\n  SchemaDefinition: ['description', 'directives', 'operationTypes'],\n  OperationTypeDefinition: ['type'],\n  ScalarTypeDefinition: ['description', 'name', 'directives'],\n  ObjectTypeDefinition: ['description', 'name', 'interfaces', 'directives', 'fields'],\n  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],\n  InputValueDefinition: ['description', 'name', 'type', 'defaultValue', 'directives'],\n  InterfaceTypeDefinition: ['description', 'name', 'interfaces', 'directives', 'fields'],\n  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],\n  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],\n  EnumValueDefinition: ['description', 'name', 'directives'],\n  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],\n  DirectiveDefinition: ['description', 'name', 'arguments', 'locations'],\n  SchemaExtension: ['directives', 'operationTypes'],\n  ScalarTypeExtension: ['name', 'directives'],\n  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  InterfaceTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  UnionTypeExtension: ['name', 'directives', 'types'],\n  EnumTypeExtension: ['name', 'directives', 'values'],\n  InputObjectTypeExtension: ['name', 'directives', 'fields']\n};\nexports.QueryDocumentKeys = QueryDocumentKeys;\nvar BREAK = Object.freeze({});\n/**\n * visit() will walk through an AST using a depth-first traversal, calling\n * the visitor's enter function at each node in the traversal, and calling the\n * leave function after visiting that node and all of its child nodes.\n *\n * By returning different values from the enter and leave functions, the\n * behavior of the visitor can be altered, including skipping over a sub-tree of\n * the AST (by returning false), editing the AST by returning a value or null\n * to remove the value, or to stop the whole traversal by returning BREAK.\n *\n * When using visit() to edit an AST, the original AST will not be modified, and\n * a new version of the AST with the changes applied will be returned from the\n * visit function.\n *\n *     const editedAST = visit(ast, {\n *       enter(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: skip visiting this node\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       },\n *       leave(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: no action\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       }\n *     });\n *\n * Alternatively to providing enter() and leave() functions, a visitor can\n * instead provide functions named the same as the kinds of AST nodes, or\n * enter/leave visitors at a named key, leading to four permutations of the\n * visitor API:\n *\n * 1) Named visitors triggered when entering a node of a specific kind.\n *\n *     visit(ast, {\n *       Kind(node) {\n *         // enter the \"Kind\" node\n *       }\n *     })\n *\n * 2) Named visitors that trigger upon entering and leaving a node of\n *    a specific kind.\n *\n *     visit(ast, {\n *       Kind: {\n *         enter(node) {\n *           // enter the \"Kind\" node\n *         }\n *         leave(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n *\n * 3) Generic visitors that trigger upon entering and leaving any node.\n *\n *     visit(ast, {\n *       enter(node) {\n *         // enter any node\n *       },\n *       leave(node) {\n *         // leave any node\n *       }\n *     })\n *\n * 4) Parallel visitors for entering and leaving nodes of a specific kind.\n *\n *     visit(ast, {\n *       enter: {\n *         Kind(node) {\n *           // enter the \"Kind\" node\n *         }\n *       },\n *       leave: {\n *         Kind(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n */\n\nexports.BREAK = BREAK;\n\nfunction visit(root, visitor) {\n  var visitorKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : QueryDocumentKeys;\n\n  /* eslint-disable no-undef-init */\n  var stack = undefined;\n  var inArray = Array.isArray(root);\n  var keys = [root];\n  var index = -1;\n  var edits = [];\n  var node = undefined;\n  var key = undefined;\n  var parent = undefined;\n  var path = [];\n  var ancestors = [];\n  var newRoot = root;\n  /* eslint-enable no-undef-init */\n\n  do {\n    index++;\n    var isLeaving = index === keys.length;\n    var isEdited = isLeaving && edits.length !== 0;\n\n    if (isLeaving) {\n      key = ancestors.length === 0 ? undefined : path[path.length - 1];\n      node = parent;\n      parent = ancestors.pop();\n\n      if (isEdited) {\n        if (inArray) {\n          node = node.slice();\n        } else {\n          var clone = {};\n\n          for (var _i2 = 0, _Object$keys2 = Object.keys(node); _i2 < _Object$keys2.length; _i2++) {\n            var k = _Object$keys2[_i2];\n            clone[k] = node[k];\n          }\n\n          node = clone;\n        }\n\n        var editOffset = 0;\n\n        for (var ii = 0; ii < edits.length; ii++) {\n          var editKey = edits[ii][0];\n          var editValue = edits[ii][1];\n\n          if (inArray) {\n            editKey -= editOffset;\n          }\n\n          if (inArray && editValue === null) {\n            node.splice(editKey, 1);\n            editOffset++;\n          } else {\n            node[editKey] = editValue;\n          }\n        }\n      }\n\n      index = stack.index;\n      keys = stack.keys;\n      edits = stack.edits;\n      inArray = stack.inArray;\n      stack = stack.prev;\n    } else {\n      key = parent ? inArray ? index : keys[index] : undefined;\n      node = parent ? parent[key] : newRoot;\n\n      if (node === null || node === undefined) {\n        continue;\n      }\n\n      if (parent) {\n        path.push(key);\n      }\n    }\n\n    var result = void 0;\n\n    if (!Array.isArray(node)) {\n      if (!(0, _ast.isNode)(node)) {\n        throw new Error(\"Invalid AST Node: \".concat((0, _inspect.default)(node), \".\"));\n      }\n\n      var visitFn = getVisitFn(visitor, node.kind, isLeaving);\n\n      if (visitFn) {\n        result = visitFn.call(visitor, node, key, parent, path, ancestors);\n\n        if (result === BREAK) {\n          break;\n        }\n\n        if (result === false) {\n          if (!isLeaving) {\n            path.pop();\n            continue;\n          }\n        } else if (result !== undefined) {\n          edits.push([key, result]);\n\n          if (!isLeaving) {\n            if ((0, _ast.isNode)(result)) {\n              node = result;\n            } else {\n              path.pop();\n              continue;\n            }\n          }\n        }\n      }\n    }\n\n    if (result === undefined && isEdited) {\n      edits.push([key, node]);\n    }\n\n    if (isLeaving) {\n      path.pop();\n    } else {\n      var _visitorKeys$node$kin;\n\n      stack = {\n        inArray: inArray,\n        index: index,\n        keys: keys,\n        edits: edits,\n        prev: stack\n      };\n      inArray = Array.isArray(node);\n      keys = inArray ? node : (_visitorKeys$node$kin = visitorKeys[node.kind]) !== null && _visitorKeys$node$kin !== void 0 ? _visitorKeys$node$kin : [];\n      index = -1;\n      edits = [];\n\n      if (parent) {\n        ancestors.push(parent);\n      }\n\n      parent = node;\n    }\n  } while (stack !== undefined);\n\n  if (edits.length !== 0) {\n    newRoot = edits[edits.length - 1][1];\n  }\n\n  return newRoot;\n}\n/**\n * Creates a new visitor instance which delegates to many visitors to run in\n * parallel. Each visitor will be visited for each node before moving on.\n *\n * If a prior visitor edits a node, no following visitors will see that node.\n */\n\n\nfunction visitInParallel(visitors) {\n  var skipping = new Array(visitors.length);\n  return {\n    enter: function enter(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (skipping[i] == null) {\n          var fn = getVisitFn(visitors[i], node.kind,\n          /* isLeaving */\n          false);\n\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n\n            if (result === false) {\n              skipping[i] = node;\n            } else if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined) {\n              return result;\n            }\n          }\n        }\n      }\n    },\n    leave: function leave(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (skipping[i] == null) {\n          var fn = getVisitFn(visitors[i], node.kind,\n          /* isLeaving */\n          true);\n\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n\n            if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined && result !== false) {\n              return result;\n            }\n          }\n        } else if (skipping[i] === node) {\n          skipping[i] = null;\n        }\n      }\n    }\n  };\n}\n/**\n * Given a visitor instance, if it is leaving or not, and a node kind, return\n * the function the visitor runtime should call.\n */\n\n\nfunction getVisitFn(visitor, kind, isLeaving) {\n  var kindVisitor = visitor[kind];\n\n  if (kindVisitor) {\n    if (!isLeaving && typeof kindVisitor === 'function') {\n      // { Kind() {} }\n      return kindVisitor;\n    }\n\n    var kindSpecificVisitor = isLeaving ? kindVisitor.leave : kindVisitor.enter;\n\n    if (typeof kindSpecificVisitor === 'function') {\n      // { Kind: { enter() {}, leave() {} } }\n      return kindSpecificVisitor;\n    }\n  } else {\n    var specificVisitor = isLeaving ? visitor.leave : visitor.enter;\n\n    if (specificVisitor) {\n      if (typeof specificVisitor === 'function') {\n        // { enter() {}, leave() {} }\n        return specificVisitor;\n      }\n\n      var specificKindVisitor = specificVisitor[kind];\n\n      if (typeof specificKindVisitor === 'function') {\n        // { enter: { Kind() {} }, leave: { Kind() {} } }\n        return specificKindVisitor;\n      }\n    }\n  }\n}\n","// istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\nvar nodejsCustomInspectSymbol = typeof Symbol === 'function' && typeof Symbol.for === 'function' ? Symbol.for('nodejs.util.inspect.custom') : undefined;\nexport default nodejsCustomInspectSymbol;\n","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport nodejsCustomInspectSymbol from \"./nodejsCustomInspectSymbol.mjs\";\nvar MAX_ARRAY_LENGTH = 10;\nvar MAX_RECURSIVE_DEPTH = 2;\n/**\n * Used to print values in error messages.\n */\n\nexport default function inspect(value) {\n  return formatValue(value, []);\n}\n\nfunction formatValue(value, seenValues) {\n  switch (_typeof(value)) {\n    case 'string':\n      return JSON.stringify(value);\n\n    case 'function':\n      return value.name ? \"[function \".concat(value.name, \"]\") : '[function]';\n\n    case 'object':\n      if (value === null) {\n        return 'null';\n      }\n\n      return formatObjectValue(value, seenValues);\n\n    default:\n      return String(value);\n  }\n}\n\nfunction formatObjectValue(value, previouslySeenValues) {\n  if (previouslySeenValues.indexOf(value) !== -1) {\n    return '[Circular]';\n  }\n\n  var seenValues = [].concat(previouslySeenValues, [value]);\n  var customInspectFn = getCustomFn(value);\n\n  if (customInspectFn !== undefined) {\n    // $FlowFixMe(>=0.90.0)\n    var customValue = customInspectFn.call(value); // check for infinite recursion\n\n    if (customValue !== value) {\n      return typeof customValue === 'string' ? customValue : formatValue(customValue, seenValues);\n    }\n  } else if (Array.isArray(value)) {\n    return formatArray(value, seenValues);\n  }\n\n  return formatObject(value, seenValues);\n}\n\nfunction formatObject(object, seenValues) {\n  var keys = Object.keys(object);\n\n  if (keys.length === 0) {\n    return '{}';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[' + getObjectTag(object) + ']';\n  }\n\n  var properties = keys.map(function (key) {\n    var value = formatValue(object[key], seenValues);\n    return key + ': ' + value;\n  });\n  return '{ ' + properties.join(', ') + ' }';\n}\n\nfunction formatArray(array, seenValues) {\n  if (array.length === 0) {\n    return '[]';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[Array]';\n  }\n\n  var len = Math.min(MAX_ARRAY_LENGTH, array.length);\n  var remaining = array.length - len;\n  var items = [];\n\n  for (var i = 0; i < len; ++i) {\n    items.push(formatValue(array[i], seenValues));\n  }\n\n  if (remaining === 1) {\n    items.push('... 1 more item');\n  } else if (remaining > 1) {\n    items.push(\"... \".concat(remaining, \" more items\"));\n  }\n\n  return '[' + items.join(', ') + ']';\n}\n\nfunction getCustomFn(object) {\n  var customInspectFn = object[String(nodejsCustomInspectSymbol)];\n\n  if (typeof customInspectFn === 'function') {\n    return customInspectFn;\n  }\n\n  if (typeof object.inspect === 'function') {\n    return object.inspect;\n  }\n}\n\nfunction getObjectTag(object) {\n  var tag = Object.prototype.toString.call(object).replace(/^\\[object /, '').replace(/]$/, '');\n\n  if (tag === 'Object' && typeof object.constructor === 'function') {\n    var name = object.constructor.name;\n\n    if (typeof name === 'string' && name !== '') {\n      return name;\n    }\n  }\n\n  return tag;\n}\n","import invariant from \"./invariant.mjs\";\nimport nodejsCustomInspectSymbol from \"./nodejsCustomInspectSymbol.mjs\";\n/**\n * The `defineInspect()` function defines `inspect()` prototype method as alias of `toJSON`\n */\n\nexport default function defineInspect(classObject) {\n  var fn = classObject.prototype.toJSON;\n  typeof fn === 'function' || invariant(0);\n  classObject.prototype.inspect = fn; // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\n  if (nodejsCustomInspectSymbol) {\n    classObject.prototype[nodejsCustomInspectSymbol] = fn;\n  }\n}\n","export default function invariant(condition, message) {\n  var booleanCondition = Boolean(condition); // istanbul ignore else (See transformation done in './resources/inlineInvariant.js')\n\n  if (!booleanCondition) {\n    throw new Error(message != null ? message : 'Unexpected invariant triggered.');\n  }\n}\n","import defineInspect from \"../jsutils/defineInspect.mjs\";\n\n/**\n * Contains a range of UTF-8 character offsets and token references that\n * identify the region of the source from which the AST derived.\n */\nexport var Location = /*#__PURE__*/function () {\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The Token at which this Node begins.\n   */\n\n  /**\n   * The Token at which this Node ends.\n   */\n\n  /**\n   * The Source document the AST represents.\n   */\n  function Location(startToken, endToken, source) {\n    this.start = startToken.start;\n    this.end = endToken.end;\n    this.startToken = startToken;\n    this.endToken = endToken;\n    this.source = source;\n  }\n\n  var _proto = Location.prototype;\n\n  _proto.toJSON = function toJSON() {\n    return {\n      start: this.start,\n      end: this.end\n    };\n  };\n\n  return Location;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(Location);\n/**\n * Represents a range of characters represented by a lexical token\n * within a Source.\n */\n\nexport var Token = /*#__PURE__*/function () {\n  /**\n   * The kind of Token.\n   */\n\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The 1-indexed line number on which this Token appears.\n   */\n\n  /**\n   * The 1-indexed column number at which this Token begins.\n   */\n\n  /**\n   * For non-punctuation tokens, represents the interpreted value of the token.\n   */\n\n  /**\n   * Tokens exist as nodes in a double-linked-list amongst all tokens\n   * including ignored tokens. <SOF> is always the first node and <EOF>\n   * the last.\n   */\n  function Token(kind, start, end, line, column, prev, value) {\n    this.kind = kind;\n    this.start = start;\n    this.end = end;\n    this.line = line;\n    this.column = column;\n    this.value = value;\n    this.prev = prev;\n    this.next = null;\n  }\n\n  var _proto2 = Token.prototype;\n\n  _proto2.toJSON = function toJSON() {\n    return {\n      kind: this.kind,\n      value: this.value,\n      line: this.line,\n      column: this.column\n    };\n  };\n\n  return Token;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(Token);\n/**\n * @internal\n */\n\nexport function isNode(maybeNode) {\n  return maybeNode != null && typeof maybeNode.kind === 'string';\n}\n/**\n * The list of all possible AST node types.\n */\n","import inspect from \"../jsutils/inspect.mjs\";\nimport { isNode } from \"./ast.mjs\";\n/**\n * A visitor is provided to visit, it contains the collection of\n * relevant functions to be called during the visitor's traversal.\n */\n\nexport var QueryDocumentKeys = {\n  Name: [],\n  Document: ['definitions'],\n  OperationDefinition: ['name', 'variableDefinitions', 'directives', 'selectionSet'],\n  VariableDefinition: ['variable', 'type', 'defaultValue', 'directives'],\n  Variable: ['name'],\n  SelectionSet: ['selections'],\n  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],\n  Argument: ['name', 'value'],\n  FragmentSpread: ['name', 'directives'],\n  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],\n  FragmentDefinition: ['name', // Note: fragment variable definitions are experimental and may be changed\n  // or removed in the future.\n  'variableDefinitions', 'typeCondition', 'directives', 'selectionSet'],\n  IntValue: [],\n  FloatValue: [],\n  StringValue: [],\n  BooleanValue: [],\n  NullValue: [],\n  EnumValue: [],\n  ListValue: ['values'],\n  ObjectValue: ['fields'],\n  ObjectField: ['name', 'value'],\n  Directive: ['name', 'arguments'],\n  NamedType: ['name'],\n  ListType: ['type'],\n  NonNullType: ['type'],\n  SchemaDefinition: ['description', 'directives', 'operationTypes'],\n  OperationTypeDefinition: ['type'],\n  ScalarTypeDefinition: ['description', 'name', 'directives'],\n  ObjectTypeDefinition: ['description', 'name', 'interfaces', 'directives', 'fields'],\n  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],\n  InputValueDefinition: ['description', 'name', 'type', 'defaultValue', 'directives'],\n  InterfaceTypeDefinition: ['description', 'name', 'interfaces', 'directives', 'fields'],\n  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],\n  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],\n  EnumValueDefinition: ['description', 'name', 'directives'],\n  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],\n  DirectiveDefinition: ['description', 'name', 'arguments', 'locations'],\n  SchemaExtension: ['directives', 'operationTypes'],\n  ScalarTypeExtension: ['name', 'directives'],\n  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  InterfaceTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  UnionTypeExtension: ['name', 'directives', 'types'],\n  EnumTypeExtension: ['name', 'directives', 'values'],\n  InputObjectTypeExtension: ['name', 'directives', 'fields']\n};\nexport var BREAK = Object.freeze({});\n/**\n * visit() will walk through an AST using a depth-first traversal, calling\n * the visitor's enter function at each node in the traversal, and calling the\n * leave function after visiting that node and all of its child nodes.\n *\n * By returning different values from the enter and leave functions, the\n * behavior of the visitor can be altered, including skipping over a sub-tree of\n * the AST (by returning false), editing the AST by returning a value or null\n * to remove the value, or to stop the whole traversal by returning BREAK.\n *\n * When using visit() to edit an AST, the original AST will not be modified, and\n * a new version of the AST with the changes applied will be returned from the\n * visit function.\n *\n *     const editedAST = visit(ast, {\n *       enter(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: skip visiting this node\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       },\n *       leave(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: no action\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       }\n *     });\n *\n * Alternatively to providing enter() and leave() functions, a visitor can\n * instead provide functions named the same as the kinds of AST nodes, or\n * enter/leave visitors at a named key, leading to four permutations of the\n * visitor API:\n *\n * 1) Named visitors triggered when entering a node of a specific kind.\n *\n *     visit(ast, {\n *       Kind(node) {\n *         // enter the \"Kind\" node\n *       }\n *     })\n *\n * 2) Named visitors that trigger upon entering and leaving a node of\n *    a specific kind.\n *\n *     visit(ast, {\n *       Kind: {\n *         enter(node) {\n *           // enter the \"Kind\" node\n *         }\n *         leave(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n *\n * 3) Generic visitors that trigger upon entering and leaving any node.\n *\n *     visit(ast, {\n *       enter(node) {\n *         // enter any node\n *       },\n *       leave(node) {\n *         // leave any node\n *       }\n *     })\n *\n * 4) Parallel visitors for entering and leaving nodes of a specific kind.\n *\n *     visit(ast, {\n *       enter: {\n *         Kind(node) {\n *           // enter the \"Kind\" node\n *         }\n *       },\n *       leave: {\n *         Kind(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n */\n\nexport function visit(root, visitor) {\n  var visitorKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : QueryDocumentKeys;\n\n  /* eslint-disable no-undef-init */\n  var stack = undefined;\n  var inArray = Array.isArray(root);\n  var keys = [root];\n  var index = -1;\n  var edits = [];\n  var node = undefined;\n  var key = undefined;\n  var parent = undefined;\n  var path = [];\n  var ancestors = [];\n  var newRoot = root;\n  /* eslint-enable no-undef-init */\n\n  do {\n    index++;\n    var isLeaving = index === keys.length;\n    var isEdited = isLeaving && edits.length !== 0;\n\n    if (isLeaving) {\n      key = ancestors.length === 0 ? undefined : path[path.length - 1];\n      node = parent;\n      parent = ancestors.pop();\n\n      if (isEdited) {\n        if (inArray) {\n          node = node.slice();\n        } else {\n          var clone = {};\n\n          for (var _i2 = 0, _Object$keys2 = Object.keys(node); _i2 < _Object$keys2.length; _i2++) {\n            var k = _Object$keys2[_i2];\n            clone[k] = node[k];\n          }\n\n          node = clone;\n        }\n\n        var editOffset = 0;\n\n        for (var ii = 0; ii < edits.length; ii++) {\n          var editKey = edits[ii][0];\n          var editValue = edits[ii][1];\n\n          if (inArray) {\n            editKey -= editOffset;\n          }\n\n          if (inArray && editValue === null) {\n            node.splice(editKey, 1);\n            editOffset++;\n          } else {\n            node[editKey] = editValue;\n          }\n        }\n      }\n\n      index = stack.index;\n      keys = stack.keys;\n      edits = stack.edits;\n      inArray = stack.inArray;\n      stack = stack.prev;\n    } else {\n      key = parent ? inArray ? index : keys[index] : undefined;\n      node = parent ? parent[key] : newRoot;\n\n      if (node === null || node === undefined) {\n        continue;\n      }\n\n      if (parent) {\n        path.push(key);\n      }\n    }\n\n    var result = void 0;\n\n    if (!Array.isArray(node)) {\n      if (!isNode(node)) {\n        throw new Error(\"Invalid AST Node: \".concat(inspect(node), \".\"));\n      }\n\n      var visitFn = getVisitFn(visitor, node.kind, isLeaving);\n\n      if (visitFn) {\n        result = visitFn.call(visitor, node, key, parent, path, ancestors);\n\n        if (result === BREAK) {\n          break;\n        }\n\n        if (result === false) {\n          if (!isLeaving) {\n            path.pop();\n            continue;\n          }\n        } else if (result !== undefined) {\n          edits.push([key, result]);\n\n          if (!isLeaving) {\n            if (isNode(result)) {\n              node = result;\n            } else {\n              path.pop();\n              continue;\n            }\n          }\n        }\n      }\n    }\n\n    if (result === undefined && isEdited) {\n      edits.push([key, node]);\n    }\n\n    if (isLeaving) {\n      path.pop();\n    } else {\n      var _visitorKeys$node$kin;\n\n      stack = {\n        inArray: inArray,\n        index: index,\n        keys: keys,\n        edits: edits,\n        prev: stack\n      };\n      inArray = Array.isArray(node);\n      keys = inArray ? node : (_visitorKeys$node$kin = visitorKeys[node.kind]) !== null && _visitorKeys$node$kin !== void 0 ? _visitorKeys$node$kin : [];\n      index = -1;\n      edits = [];\n\n      if (parent) {\n        ancestors.push(parent);\n      }\n\n      parent = node;\n    }\n  } while (stack !== undefined);\n\n  if (edits.length !== 0) {\n    newRoot = edits[edits.length - 1][1];\n  }\n\n  return newRoot;\n}\n/**\n * Creates a new visitor instance which delegates to many visitors to run in\n * parallel. Each visitor will be visited for each node before moving on.\n *\n * If a prior visitor edits a node, no following visitors will see that node.\n */\n\nexport function visitInParallel(visitors) {\n  var skipping = new Array(visitors.length);\n  return {\n    enter: function enter(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (skipping[i] == null) {\n          var fn = getVisitFn(visitors[i], node.kind,\n          /* isLeaving */\n          false);\n\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n\n            if (result === false) {\n              skipping[i] = node;\n            } else if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined) {\n              return result;\n            }\n          }\n        }\n      }\n    },\n    leave: function leave(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (skipping[i] == null) {\n          var fn = getVisitFn(visitors[i], node.kind,\n          /* isLeaving */\n          true);\n\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n\n            if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined && result !== false) {\n              return result;\n            }\n          }\n        } else if (skipping[i] === node) {\n          skipping[i] = null;\n        }\n      }\n    }\n  };\n}\n/**\n * Given a visitor instance, if it is leaving or not, and a node kind, return\n * the function the visitor runtime should call.\n */\n\nexport function getVisitFn(visitor, kind, isLeaving) {\n  var kindVisitor = visitor[kind];\n\n  if (kindVisitor) {\n    if (!isLeaving && typeof kindVisitor === 'function') {\n      // { Kind() {} }\n      return kindVisitor;\n    }\n\n    var kindSpecificVisitor = isLeaving ? kindVisitor.leave : kindVisitor.enter;\n\n    if (typeof kindSpecificVisitor === 'function') {\n      // { Kind: { enter() {}, leave() {} } }\n      return kindSpecificVisitor;\n    }\n  } else {\n    var specificVisitor = isLeaving ? visitor.leave : visitor.enter;\n\n    if (specificVisitor) {\n      if (typeof specificVisitor === 'function') {\n        // { enter() {}, leave() {} }\n        return specificVisitor;\n      }\n\n      var specificKindVisitor = specificVisitor[kind];\n\n      if (typeof specificKindVisitor === 'function') {\n        // { enter: { Kind() {} }, leave: { Kind() {} } }\n        return specificKindVisitor;\n      }\n    }\n  }\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SYMBOL_TO_STRING_TAG = exports.SYMBOL_ASYNC_ITERATOR = exports.SYMBOL_ITERATOR = void 0;\n// In ES2015 (or a polyfilled) environment, this will be Symbol.iterator\n// istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\nvar SYMBOL_ITERATOR = typeof Symbol === 'function' ? Symbol.iterator : '@@iterator'; // In ES2017 (or a polyfilled) environment, this will be Symbol.asyncIterator\n// istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\nexports.SYMBOL_ITERATOR = SYMBOL_ITERATOR;\nvar SYMBOL_ASYNC_ITERATOR = // $FlowFixMe Flow doesn't define `Symbol.asyncIterator` yet\ntypeof Symbol === 'function' ? Symbol.asyncIterator : '@@asyncIterator'; // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\nexports.SYMBOL_ASYNC_ITERATOR = SYMBOL_ASYNC_ITERATOR;\nvar SYMBOL_TO_STRING_TAG = // $FlowFixMe Flow doesn't define `Symbol.toStringTag` yet\ntypeof Symbol === 'function' ? Symbol.toStringTag : '@@toStringTag';\nexports.SYMBOL_TO_STRING_TAG = SYMBOL_TO_STRING_TAG;\n"],"sourceRoot":""}